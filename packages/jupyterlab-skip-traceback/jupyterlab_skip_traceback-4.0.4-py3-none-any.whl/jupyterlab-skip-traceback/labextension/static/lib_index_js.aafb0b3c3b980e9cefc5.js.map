{"version":3,"file":"lib_index_js.aafb0b3c3b980e9cefc5.js","mappings":";;;;;;;;;;;;;;;;;;;AAA4B;AACa;AACW;AACW;AAC/D;AACA,uCAAuC,gBAAgB;AACvD,2EAA2E,eAAe;AAC1F,0EAA0E,eAAe;AACzF;AACA;AACe,kCAAkC,mDAAM;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,oBAAoB,IAAI,iBAAiB,WAAW,kBAAkB;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sFAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kEAAU;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACnF6D;AACL;AACO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,qCAAqC,4DAAmB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA,eAAe,uEAAmB,EAAE,yEAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wEAA+B,GAAG,WAAW;AACzD;AACA,gCAAgC,YAAY;AAC5C;AACA;AACA,SAAS;AACT,wEAAwE,YAAY,IAAI,IAAI;AAC5F,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,iEAAe,iBAAiB,EAAC;;;;;;;;;;;;;;;;;ACrDjC;AACA;AAC6C;AAC7C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,SAAS;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,SAAS;AAC/D;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uDAAQ;AACnC,CAAC,0BAA0B;AAC3B;;;;;;;;;;;;;;;;;;ACjGA;AACsH;AAC7B;AACzF,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F;AACA,2DAA2D,4DAA4D,4CAA4C,yCAAyC,GAAG,8BAA8B,kCAAkC,iBAAiB,gBAAgB,oBAAoB,cAAc,GAAG,oCAAoC,8BAA8B,GAAG,qCAAqC,8BAA8B,GAAG,oCAAoC,oBAAoB,GAAG,gCAAgC,mBAAmB,sBAAsB,GAAG,0EAA0E,wEAAwE,gBAAgB,GAAG,qCAAqC,iBAAiB,GAAG,qCAAqC,mBAAmB,sBAAsB,GAAG,OAAO,iFAAiF,YAAY,aAAa,aAAa,OAAO,KAAK,YAAY,WAAW,UAAU,UAAU,UAAU,MAAM,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,OAAO,KAAK,UAAU,YAAY,OAAO,KAAK,YAAY,WAAW,UAAU,MAAM,KAAK,UAAU,MAAM,KAAK,UAAU,YAAY,2CAA2C,4DAA4D,4CAA4C,yCAAyC,GAAG,8BAA8B,kCAAkC,iBAAiB,gBAAgB,oBAAoB,cAAc,GAAG,oCAAoC,8BAA8B,GAAG,qCAAqC,8BAA8B,GAAG,oCAAoC,oBAAoB,GAAG,gCAAgC,mBAAmB,sBAAsB,GAAG,0EAA0E,wEAAwE,gBAAgB,GAAG,qCAAqC,iBAAiB,GAAG,qCAAqC,mBAAmB,sBAAsB,GAAG,mBAAmB;AACxrE;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;ACPvC;AACsH;AAC7B;AACW;AACpG,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F,0BAA0B,qFAAiC;AAC3D;AACA,mDAAmD,kEAAkE;AACrH;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;ACTkD;AACzF,YAAuF;;AAEvF;;AAEA;AACA;;AAEA,aAAa,0GAAG,CAAC,sFAAO;;;;AAIxB,iEAAe,6FAAc,MAAM","sources":["webpack://jupyterlab-skip-traceback/./lib/SkipTracebackWidget.js","webpack://jupyterlab-skip-traceback/./lib/index.js","webpack://jupyterlab-skip-traceback/./node_modules/@jupyterlab/apputils/lib/clipboard.js","webpack://jupyterlab-skip-traceback/./style/base.css","webpack://jupyterlab-skip-traceback/./style/index.css","webpack://jupyterlab-skip-traceback/./style/index.css?0140"],"sourcesContent":["import '../style/index.css';\nimport { Widget } from '@lumino/widgets';\nimport { renderText } from '@jupyterlab/rendermime';\nimport { Clipboard } from '@jupyterlab/apputils/lib/clipboard';\nconst BTN_BASE_CLASS = 'minimal jp-Button';\nconst COPY_CLASS = `fa fa-fw fa-copy ${BTN_BASE_CLASS} right-align`;\nconst TOGGLE_CLOSED_CLASS = `fa fa-caret-right jp-ToolbarButtonComponent ${BTN_BASE_CLASS}`;\nconst TOGGLE_OPENED_CLASS = `fa fa-caret-down jp-ToolbarButtonComponent ${BTN_BASE_CLASS}`;\nconst SHORT_ERROR_CLASS = 'short-error';\nconst RED_BOLD_TEXT_CLASS = 'red-bold-text';\nexport default class SkipTracebackWidget extends Widget {\n    constructor(options) {\n        super();\n        this._mimeType = options.mimeType;\n        this._sanitizer = options.sanitizer;\n    }\n    static setDefaults(newDefaults) {\n        SkipTracebackWidget._defaults = Object.assign(Object.assign({}, SkipTracebackWidget._defaults), newDefaults);\n    }\n    _toggleTraceback() {\n        if (this._toggleBtn && this._tracebackNode) {\n            const isToggled = this._toggleBtn.className === TOGGLE_CLOSED_CLASS;\n            if (isToggled) {\n                this._toggleBtn.className = TOGGLE_OPENED_CLASS;\n                this._shortError.innerHTML = '';\n                this.node.appendChild(this._tracebackNode);\n            }\n            else {\n                this._toggleBtn.className = TOGGLE_CLOSED_CLASS;\n                this._shortError.innerHTML = `<span class=\"${RED_BOLD_TEXT_CLASS}\">${this._data.ename}</span>: ${this._data.evalue}`;\n                this.node.removeChild(this._tracebackNode);\n            }\n        }\n    }\n    _copyTraceback() {\n        if (this._tracebackNode) {\n            Clipboard.copyToSystem(this._tracebackNode.textContent || '');\n        }\n    }\n    renderModel(model) {\n        this._data = model.data[this._mimeType];\n        const toggleBtn = document.createElement('button');\n        toggleBtn.className = TOGGLE_CLOSED_CLASS;\n        toggleBtn.onclick = this._toggleTraceback.bind(this);\n        this._toggleBtn = toggleBtn;\n        const shortError = document.createElement('pre');\n        shortError.className = SHORT_ERROR_CLASS;\n        shortError.innerHTML = '';\n        shortError.onclick = this._toggleTraceback.bind(this);\n        this._shortError = shortError;\n        const copyBtn = document.createElement('button');\n        copyBtn.className = COPY_CLASS;\n        copyBtn.onclick = this._copyTraceback.bind(this);\n        copyBtn.title = 'Copy full traceback to clipboard';\n        const span = document.createElement('div');\n        span.className = 'skip-traceback';\n        span.appendChild(copyBtn);\n        span.appendChild(toggleBtn);\n        span.appendChild(shortError);\n        const traceback = document.createElement('pre');\n        const rt = renderText({\n            host: traceback,\n            sanitizer: this._sanitizer,\n            // It should look like stderr\n            source: model.data['application/vnd.jupyter.stderr'] ||\n                this._data.traceback.join('\\n'),\n        });\n        const tbDiv = document.createElement('div');\n        tbDiv.className = 'jp-RenderedText';\n        tbDiv.setAttribute('data-mime-type', 'application/vnd.jupyter.stderr');\n        tbDiv.appendChild(traceback);\n        // End hack due to issue\n        this._tracebackNode = tbDiv;\n        this.node.appendChild(span);\n        if (!SkipTracebackWidget._defaults.collapsed) {\n            this._toggleTraceback();\n        }\n        // Don't finish until we render the text\n        return rt;\n    }\n}\nSkipTracebackWidget._defaults = {\n    collapsed: true,\n};\n","import { IRenderMimeRegistry } from '@jupyterlab/rendermime';\nimport SkipTracebackWidget from './SkipTracebackWidget';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\n/**\n * The default mime type for the extension.\n */\nconst MIME_TYPE = 'application/vnd.jupyter.error';\nconst PLUGIN_NAME = 'jupyterlab-skip-traceback';\n/**\n * A mime renderer factory for jupyter_exec_error data.\n */\nexport const rendererFactory = {\n    safe: true,\n    mimeTypes: [MIME_TYPE],\n    createRenderer: (options) => new SkipTracebackWidget(options),\n};\n/**\n * Extension definition.\n */\nconst extension = {\n    id: 'jupyterlab-skip-traceback:rendermime',\n    rendererFactory,\n    rank: 0,\n    dataType: 'json',\n};\nconst extensionSettings = {\n    id: `${PLUGIN_NAME}:plugin`,\n    autoStart: true,\n    requires: [IRenderMimeRegistry, ISettingRegistry],\n    activate: function (app, rendermime, settingRegistry) {\n        function updateSettings(settings) {\n            const enabled = settings.get('enabled').composite;\n            if (enabled) {\n                // Safe to do multiple times as the code replaces the current one\n                rendermime.addFactory(extension.rendererFactory, extension.rank);\n            }\n            else {\n                // We assume we were the only mime render ever installed and nothing removed us already\n                extension.rendererFactory.mimeTypes.forEach((type) => rendermime.removeMimeType(type));\n            }\n            const collapsed = settings.get('collapsed').composite;\n            SkipTracebackWidget.setDefaults({ collapsed });\n        }\n        settingRegistry.load(`${PLUGIN_NAME}:settings`).then((settings) => {\n            updateSettings(settings);\n            settings.changed.connect(updateSettings);\n        }, (err) => {\n            console.error(`Could not load settings, so did not active ${PLUGIN_NAME}: ${err}`);\n        });\n        // eslint-disable-next-line no-console\n        console.log('JupyterLab extension jupyterlab-skip-traceback is activated!');\n    },\n};\nexport default extensionSettings;\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { MimeData } from '@lumino/coreutils';\n/**\n * The clipboard interface.\n */\nexport var Clipboard;\n(function (Clipboard) {\n    /**\n     * Get the application clipboard instance.\n     */\n    function getInstance() {\n        return Private.instance;\n    }\n    Clipboard.getInstance = getInstance;\n    /**\n     * Set the application clipboard instance.\n     */\n    function setInstance(value) {\n        Private.instance = value;\n    }\n    Clipboard.setInstance = setInstance;\n    /**\n     * Copy text to the system clipboard.\n     *\n     * #### Notes\n     * This can only be called in response to a user input event.\n     */\n    function copyToSystem(clipboardData) {\n        const node = document.body;\n        const handler = (event) => {\n            const data = event.clipboardData || window.clipboardData;\n            if (typeof clipboardData === 'string') {\n                data.setData('text', clipboardData);\n            }\n            else {\n                clipboardData.types().map((mimeType) => {\n                    data.setData(mimeType, clipboardData.getData(mimeType));\n                });\n            }\n            event.preventDefault();\n            node.removeEventListener('copy', handler);\n        };\n        node.addEventListener('copy', handler);\n        generateEvent(node);\n    }\n    Clipboard.copyToSystem = copyToSystem;\n    /**\n     * Generate a clipboard event on a node.\n     *\n     * @param node - The element on which to generate the event.\n     *\n     * @param type - The type of event to generate.\n     *   `'paste'` events cannot be programmatically generated.\n     *\n     * #### Notes\n     * This can only be called in response to a user input event.\n     */\n    function generateEvent(node, type = 'copy') {\n        // http://stackoverflow.com/a/5210367\n        // Identify selected text.\n        let sel = window.getSelection();\n        // Save the current selection.\n        const savedRanges = [];\n        for (let i = 0, len = (sel === null || sel === void 0 ? void 0 : sel.rangeCount) || 0; i < len; ++i) {\n            savedRanges[i] = sel.getRangeAt(i).cloneRange();\n        }\n        // Select the node content.\n        const range = document.createRange();\n        range.selectNodeContents(node);\n        if (sel) {\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n        // Execute the command.\n        document.execCommand(type);\n        // Restore the previous selection.\n        sel = window.getSelection();\n        if (sel) {\n            sel.removeAllRanges();\n            for (let i = 0, len = savedRanges.length; i < len; ++i) {\n                sel.addRange(savedRanges[i]);\n            }\n        }\n    }\n    Clipboard.generateEvent = generateEvent;\n})(Clipboard || (Clipboard = {}));\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * The application clipboard instance.\n     */\n    Private.instance = new MimeData();\n})(Private || (Private = {}));\n//# sourceMappingURL=clipboard.js.map","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".skip-traceback {\\n  background-color: var(--jp-rendermime-error-background);\\n  font-family: var(--jp-code-font-family);\\n  color: var(--jp-content-font-color1);\\n}\\n\\n.skip-traceback > button {\\n  background-color: transparent;\\n  padding: 1px;\\n  margin: 2px;\\n  display: inline;\\n  border: 0;\\n}\\n\\n.skip-traceback > button:hover {\\n  background-color: #ffb9b9;\\n}\\n\\n.skip-traceback > button:active {\\n  background-color: #ff9090;\\n}\\n\\n.skip-traceback > .short-error {\\n  display: inline;\\n}\\n\\n.skip-traceback > .fa-copy {\\n  border: dotted;\\n  border-width: 1px;\\n}\\n\\n.skip-traceback > .fa-caret-right, .skip-traceback > .fa-caret-down  {\\n  /*To fix shifting of text to the right when toggled*/\\n  width:17px;\\n  height:17px;\\n}\\n\\n.skip-traceback  > .right-align {\\n  float: right;\\n}\\n\\n.skip-traceback  .red-bold-text {\\n  color: #b22b31;\\n  font-weight: bold;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/base.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,uDAAuD;EACvD,uCAAuC;EACvC,oCAAoC;AACtC;;AAEA;EACE,6BAA6B;EAC7B,YAAY;EACZ,WAAW;EACX,eAAe;EACf,SAAS;AACX;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,iBAAiB;AACnB;;AAEA;EACE,oDAAoD;EACpD,UAAU;EACV,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,cAAc;EACd,iBAAiB;AACnB\",\"sourcesContent\":[\".skip-traceback {\\n  background-color: var(--jp-rendermime-error-background);\\n  font-family: var(--jp-code-font-family);\\n  color: var(--jp-content-font-color1);\\n}\\n\\n.skip-traceback > button {\\n  background-color: transparent;\\n  padding: 1px;\\n  margin: 2px;\\n  display: inline;\\n  border: 0;\\n}\\n\\n.skip-traceback > button:hover {\\n  background-color: #ffb9b9;\\n}\\n\\n.skip-traceback > button:active {\\n  background-color: #ff9090;\\n}\\n\\n.skip-traceback > .short-error {\\n  display: inline;\\n}\\n\\n.skip-traceback > .fa-copy {\\n  border: dotted;\\n  border-width: 1px;\\n}\\n\\n.skip-traceback > .fa-caret-right, .skip-traceback > .fa-caret-down  {\\n  /*To fix shifting of text to the right when toggled*/\\n  width:17px;\\n  height:17px;\\n}\\n\\n.skip-traceback  > .right-align {\\n  float: right;\\n}\\n\\n.skip-traceback  .red-bold-text {\\n  color: #b22b31;\\n  font-weight: bold;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../node_modules/css-loader/dist/cjs.js!./base.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}