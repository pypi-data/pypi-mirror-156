# -*- coding: utf-8 -*-

"""
restapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from restapisdk.models.group_name_and_id_input import GroupNameAndIDInput


class TspublicRestV2GroupAddgroupRequest(object):

    """Implementation of the 'Tspublic Rest V2 Group Addgroup Request' model.

    TODO: type model description here.

    Attributes:
        name (string): Name of the group
        id (string): The GUID of the group
        groups (list of GroupNameAndIDInput): A JSON array of group names or
            GUIDs or both. When both are given then id is considered

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "groups": 'groups',
        "name": 'name',
        "id": 'id'
    }

    def __init__(self,
                 groups=None,
                 name=None,
                 id=None):
        """Constructor for the TspublicRestV2GroupAddgroupRequest class"""

        # Initialize members of the class
        self.name = name
        self.id = id
        self.groups = groups

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        groups = None
        if dictionary.get('groups') is not None:
            groups = [GroupNameAndIDInput.from_dictionary(x) for x in dictionary.get('groups')]
        name = dictionary.get('name')
        id = dictionary.get('id')
        # Return an object of this model
        return cls(groups,
                   name,
                   id)
