# -*- coding: utf-8 -*-

"""
restapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class TspublicRestV2SecurityShareTsobjectRequest(object):

    """Implementation of the 'Tspublic Rest V2 Security Share Tsobject Request' model.

    TODO: type model description here.

    Attributes:
        mtype (ShareObjectTypeEnum): Type of metadata object
        id (list of string): A JSON array of the GUIDs of the objects to be
            shared
        permission (string): A JSON object with GUIDs of user and user group,
            and the type of access privilge.    You can provide READ_ONLY or
            MODIFY access to the objects. With READ_ONLY access, the user or
            user group can view the shared object, whereas MODIFY access
            enables users to modify the object.    To remove access to a
            shared object, you can set the shareMode in the permission string
            to NO_ACCESS. Example:    {"permissions":
            {"e7040a64-7ff1-4ab9-a1b0-f1acac596866": {"shareMode":
            "READ_ONLY"}, "f7b8f511-317c-485d-8131-26cf084ef47b":
            {"shareMode": "MODIFY"},
            "7a9a6715-e154-431b-baaf-7b58246c13dd":{"shareMode":"NO_ACCESS"}}}
                    email_id (list of string): The email addresses that should ne notified
            when the objects are shared.
        notify (ShareObjectNotifyEnum): When set to true, a notification is
            sent to the users after an object is shared.
        message (string): The message text to send in the notification email
        include_custom_embed_url (ShareObjectIncludeCustomEmbedUrlEnum): When
            set to true, ThoughtSpot sends a link with the host application
            context to allow users to access the shared object from their
            ThoughtSpot embedded instance.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype": 'type',
        "id": 'id',
        "permission": 'permission',
        "email_id": 'emailId',
        "notify": 'notify',
        "message": 'message',
        "include_custom_embed_url": 'includeCustomEmbedUrl'
    }

    def __init__(self,
                 mtype=None,
                 id=None,
                 permission=None,
                 email_id=None,
                 notify='true',
                 message=None,
                 include_custom_embed_url='false'):
        """Constructor for the TspublicRestV2SecurityShareTsobjectRequest class"""

        # Initialize members of the class
        self.mtype = mtype
        self.id = id
        self.permission = permission
        self.email_id = email_id
        self.notify = notify
        self.message = message
        self.include_custom_embed_url = include_custom_embed_url

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        mtype = dictionary.get('type')
        id = dictionary.get('id')
        permission = dictionary.get('permission')
        email_id = dictionary.get('emailId')
        notify = dictionary.get("notify") if dictionary.get("notify") else 'true'
        message = dictionary.get('message')
        include_custom_embed_url = dictionary.get("includeCustomEmbedUrl") if dictionary.get("includeCustomEmbedUrl") else 'false'
        # Return an object of this model
        return cls(mtype,
                   id,
                   permission,
                   email_id,
                   notify,
                   message,
                   include_custom_embed_url)
