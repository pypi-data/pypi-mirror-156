# -*- coding: utf-8 -*-

"""
restapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from restapisdk.models.ts_object_type_serach import TsObjectTypeSerach


class PermissionsTypeSearch(object):

    """Implementation of the 'PermissionsTypeSearch' model.

    TODO: type model description here.

    Attributes:
        mtype (string): Indicates the type of the object
        ts_object (list of TsObjectTypeSerach): An array of objects of type
            mentioned in type field

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype": 'type',
        "ts_object": 'tsObject'
    }

    def __init__(self,
                 mtype=None,
                 ts_object=None):
        """Constructor for the PermissionsTypeSearch class"""

        # Initialize members of the class
        self.mtype = mtype
        self.ts_object = ts_object

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        mtype = dictionary.get('type')
        ts_object = None
        if dictionary.get('tsObject') is not None:
            ts_object = [TsObjectTypeSerach.from_dictionary(x) for x in dictionary.get('tsObject')]
        # Return an object of this model
        return cls(mtype,
                   ts_object)
