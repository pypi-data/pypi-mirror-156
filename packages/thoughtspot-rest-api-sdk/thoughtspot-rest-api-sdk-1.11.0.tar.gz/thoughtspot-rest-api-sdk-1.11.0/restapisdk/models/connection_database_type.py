# -*- coding: utf-8 -*-

"""
restapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from restapisdk.models.connection_table_schema import ConnectionTableSchema


class ConnectionDatabaseType(object):

    """Implementation of the 'ConnectionDatabaseType' model.

    TODO: type model description here.

    Attributes:
        name (string): Name of the database
        schema (list of ConnectionTableSchema): List of schemas

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": 'name',
        "schema": 'schema'
    }

    def __init__(self,
                 name=None,
                 schema=None):
        """Constructor for the ConnectionDatabaseType class"""

        # Initialize members of the class
        self.name = name
        self.schema = schema

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        name = dictionary.get('name')
        schema = None
        if dictionary.get('schema') is not None:
            schema = [ConnectionTableSchema.from_dictionary(x) for x in dictionary.get('schema')]
        # Return an object of this model
        return cls(name,
                   schema)
