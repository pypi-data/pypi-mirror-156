# -*- coding: utf-8 -*-

"""
restapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ConnectionTableColumnsInput(object):

    """Implementation of the 'ConnectionTableColumnsInput' model.

    TODO: type model description here.

    Attributes:
        db_name (string): Name of the database
        schema_name (string): Name of the schema
        name (string): Name of the table

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "db_name": 'dbName',
        "schema_name": 'schemaName',
        "name": 'name'
    }

    def __init__(self,
                 db_name=None,
                 schema_name=None,
                 name=None):
        """Constructor for the ConnectionTableColumnsInput class"""

        # Initialize members of the class
        self.db_name = db_name
        self.schema_name = schema_name
        self.name = name

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        db_name = dictionary.get('dbName')
        schema_name = dictionary.get('schemaName')
        name = dictionary.get('name')
        # Return an object of this model
        return cls(db_name,
                   schema_name,
                   name)
