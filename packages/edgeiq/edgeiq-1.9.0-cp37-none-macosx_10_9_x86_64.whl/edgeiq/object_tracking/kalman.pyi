from .object_tracking import DEFAULT_DEREGISTER_FRAMES as DEFAULT_DEREGISTER_FRAMES, DEFAULT_MAX_DISTANCE as DEFAULT_MAX_DISTANCE, DEFAULT_MIN_INERTIA as DEFAULT_MIN_INERTIA, TrackablePrediction as TrackablePrediction, TrackerAlgorithm as TrackerAlgorithm, TrackingResults as TrackingResults
from _typeshed import Incomplete

def euclidean_distance_from_estimate(prediction, trackable, max_distance): ...

class TrackableKalmanPrediction(TrackablePrediction):
    filter: Incomplete
    dim_x: Incomplete
    dim_z: Incomplete
    position: Incomplete
    velocity: Incomplete
    def init(self) -> None: ...
    def step(self) -> None: ...
    def handle_found(self, prediction) -> None: ...

class KalmanTracker:
    def __init__(self, deregister_frames=..., max_distance=..., min_inertia=..., enter_cb: Incomplete | None = ..., exit_cb: Incomplete | None = ..., history_length: int = ..., **kwargs) -> None: ...
    def update(self, predictions): ...
    def remove_id(self, id) -> None: ...
