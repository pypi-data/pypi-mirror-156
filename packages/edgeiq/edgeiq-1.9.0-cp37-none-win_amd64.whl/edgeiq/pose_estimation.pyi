from _typeshed import Incomplete
from edgeiq import edge_tools as edge_tools, processing as processing
from edgeiq._production_client import PRODUCTION_CLIENT as PRODUCTION_CLIENT
from edgeiq.base_service import BaseService as BaseService
from edgeiq.edge_tools import to_json_serializable as to_json_serializable

KEYPOINTS: Incomplete

class Pose:
    def __init__(self, key_points, score) -> None: ...
    @property
    def key_points(self): ...
    @property
    def score(self): ...

class HumanPoseResult:
    def __init__(self, poses, duration, input_dimension, image, **kwargs) -> None: ...
    def __eq__(self, other): ...
    @property
    def duration(self): ...
    @property
    def poses(self): ...
    @property
    def image(self): ...
    def draw_poses_background(self, color): ...
    def draw_poses(self, image: Incomplete | None = ...): ...
    def draw_aliens(self): ...

RESULT_TYPE: Incomplete

class PoseEstimation(BaseService):
    def __init__(self, model_id) -> None: ...
    def estimate(self, image): ...
    def publish_analytics(self, results, tag: Incomplete | None = ...) -> None: ...
