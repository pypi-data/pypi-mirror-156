{"version":3,"file":"lib_widget_js.de39947b12ff97e83c40.js","mappings":";;;;;;;;;AAAa;AACb;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,GAAG,sBAAsB;AAC5C;AACA;AACA;AACA,aAAa,mBAAO,CAAC,uCAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,mBAAmB;AACnB;;;;;;;;;;;ACpBa;AACb;AACA;AACA;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B,GAAG,6BAA6B,GAAG,mBAAmB,GAAG,oBAAoB;AACzG,eAAe,mBAAO,CAAC,oFAAuB;AAC9C,kBAAkB,mBAAO,CAAC,mCAAW;AACrC;AACA,mBAAO,CAAC,2CAAmB;AAC3B;AACA;AACA,6CAA6C,uBAAuB,oSAAoS;AACxW;AACA;AACA,oBAAoB;AACpB,2CAA2C;AAC3C;AACA;AACA;AACA,wCAAwC;AACxC,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,eAAe,mBAAO,CAAC,gEAAiB;AACxC,cAAc,mBAAO,CAAC,qFAAgB;AACtC,mBAAO,CAAC,sEAAoB;AAC5B;AACA;AACA,6CAA6C,uBAAuB;AACpE;AACA;AACA;AACA,oIAAoI;AACpI;AACA;AACA,6BAA6B;AAC7B,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAO,CAAC,+GAAqC;AAC/E,sCAAsC,mBAAO,CAAC,6GAAoC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,eAAe;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4BAA4B;AAC5B;;;;;;;;;;AChJA;AACA,kCAAkC,mBAAO,CAAC,qGAAgD;AAC1F;AACA;AACA,0CAA0C,oCAAoC,qBAAqB,GAAG;AACtG;AACA;;;;;;;;;;;;;;;;ACNA,iEAAe,qBAAuB,yEAAyE;;;;;;;;;;;;;;;ACA/G,iEAAe,qBAAuB,yEAAyE;;;;;;;;;;ACA/G,UAAU,mBAAO,CAAC,oJAAwE;AAC1F,0BAA0B,mBAAO,CAAC,qHAAuD;;AAEzF;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;AAIA","sources":["webpack://ipynavis-3d-poc/./lib/version.js","webpack://ipynavis-3d-poc/./lib/widget.js","webpack://ipynavis-3d-poc/./css/widget.css","webpack://ipynavis-3d-poc/./lib/meshes/earth_good.glb","webpack://ipynavis-3d-poc/./lib/meshes/satellite.glb","webpack://ipynavis-3d-poc/./css/widget.css?a195"],"sourcesContent":["\"use strict\";\n// Copyright (c) CristianI\n// Distributed under the terms of the Modified BSD License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MODULE_NAME = exports.MODULE_VERSION = void 0;\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst data = require('../package.json');\n/**\n * The _model_module_version/_view_module_version this package implements.\n *\n * The html widget manager assumes that this is the same as the npm package\n * version number.\n */\nexports.MODULE_VERSION = data.version;\n/*\n * The current package name.\n */\nexports.MODULE_NAME = data.name;\n//# sourceMappingURL=version.js.map","\"use strict\";\n// Copyright (c) CristianI\n// Distributed under the terms of the Modified BSD License.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SatelliteMonitorView = exports.SatelliteMonitorModel = exports.ExampleView = exports.ExampleModel = void 0;\nconst base_1 = require(\"@jupyter-widgets/base\");\nconst version_1 = require(\"./version\");\n// Import the CSS\nrequire(\"../css/widget.css\");\nclass ExampleModel extends base_1.DOMWidgetModel {\n    defaults() {\n        return Object.assign(Object.assign({}, super.defaults()), { _model_name: ExampleModel.model_name, _model_module: ExampleModel.model_module, _model_module_version: ExampleModel.model_module_version, _view_name: ExampleModel.view_name, _view_module: ExampleModel.view_module, _view_module_version: ExampleModel.view_module_version, value: 'Hello World' });\n    }\n}\nexports.ExampleModel = ExampleModel;\nExampleModel.serializers = Object.assign({}, base_1.DOMWidgetModel.serializers);\nExampleModel.model_name = 'ExampleModel';\nExampleModel.model_module = version_1.MODULE_NAME;\nExampleModel.model_module_version = version_1.MODULE_VERSION;\nExampleModel.view_name = 'ExampleView'; // Set to null if no view\nExampleModel.view_module = version_1.MODULE_NAME; // Set to null if no view\nExampleModel.view_module_version = version_1.MODULE_VERSION;\nclass ExampleView extends base_1.DOMWidgetView {\n    render() {\n        this.el.classList.add('custom-widget');\n        this.value_changed();\n        this.model.on('change:value', this.value_changed, this);\n    }\n    value_changed() {\n        this.el.textContent = this.model.get('value');\n    }\n}\nexports.ExampleView = ExampleView;\nconst core_1 = require(\"@babylonjs/core\");\nconst gui_1 = require(\"@babylonjs/gui\");\nrequire(\"@babylonjs/loaders\");\nclass SatelliteMonitorModel extends base_1.DOMWidgetModel {\n    defaults() {\n        return Object.assign(Object.assign({}, super.defaults()), { _model_name: SatelliteMonitorModel.model_name, _model_module: SatelliteMonitorModel.model_module, _model_module_version: SatelliteMonitorModel.model_module_version, _view_name: SatelliteMonitorModel.view_name, _view_module: SatelliteMonitorModel.view_module, _view_module_version: SatelliteMonitorModel.view_module_version, \n            // user input\n            satellites: [], width: 800, height: 600, \n            // meshes\n            earthMeshPath: SatelliteMonitorModel.earthMesh.default, satelliteMeshPath: SatelliteMonitorModel.satelliteMesh.default });\n    }\n}\nexports.SatelliteMonitorModel = SatelliteMonitorModel;\nSatelliteMonitorModel.serializers = Object.assign({}, base_1.DOMWidgetModel.serializers);\nSatelliteMonitorModel.model_name = 'SatelliteMonitorModel';\nSatelliteMonitorModel.model_module = version_1.MODULE_NAME;\nSatelliteMonitorModel.model_module_version = version_1.MODULE_VERSION;\nSatelliteMonitorModel.view_name = 'SatelliteMonitorView';\nSatelliteMonitorModel.view_module = version_1.MODULE_NAME;\nSatelliteMonitorModel.view_module_version = version_1.MODULE_VERSION;\nSatelliteMonitorModel.earthMesh = require('file-loader!./meshes/earth_good.glb');\nSatelliteMonitorModel.satelliteMesh = require('file-loader!./meshes/satellite.glb');\nclass SatelliteMonitorView extends base_1.DOMWidgetView {\n    render() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.createBasicScene();\n            yield this.plotSatellites();\n            this.createGUI();\n            this.createCamera();\n            (_a = this.engine) === null || _a === void 0 ? void 0 : _a.runRenderLoop(() => {\n                var _a;\n                (_a = this.scene) === null || _a === void 0 ? void 0 : _a.render();\n            });\n        });\n    }\n    createBasicScene() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.canvas = document.createElement('canvas');\n            this.canvas.width = this.model.get('width');\n            this.canvas.height = this.model.get('height');\n            this.el.appendChild(this.canvas);\n            this.engine = new core_1.Engine(this.canvas, true, { stencil: true });\n            this.scene = new core_1.Scene(this.engine);\n            this.scene.clearColor = new core_1.Color4(0, 0, 0, 1);\n            new core_1.AxesViewer(this.scene, 13);\n            new core_1.HemisphericLight('light', new core_1.Vector3(0, -15, 0), this.scene).intensity = 5;\n            this.earth = (yield core_1.SceneLoader.ImportMeshAsync('', this.model.get('earthMeshPath'), '', this.scene)).meshes[0];\n            this.earth.position = core_1.Vector3.Zero();\n            this.earth.rotate(new core_1.Vector3(0, 1, 0), core_1.Tools.ToRadians(180));\n        });\n    }\n    createGUI() {\n        const gui = gui_1.AdvancedDynamicTexture.CreateFullscreenUI(\"gui\", true, this.scene);\n        const rightPanel = new gui_1.StackPanel(\"rightPanel\");\n        rightPanel.width = \"40px\";\n        rightPanel.top = \"10px\";\n        rightPanel.isVertical = true;\n        rightPanel.horizontalAlignment = gui_1.Control.HORIZONTAL_ALIGNMENT_RIGHT;\n        rightPanel.verticalAlignment = gui_1.Control.VERTICAL_ALIGNMENT_TOP;\n        const exitButton = gui_1.Button.CreateSimpleButton(\"exitButton\", \"x\");\n        exitButton.width = \"30px\";\n        exitButton.height = \"30px\";\n        exitButton.color = \"red\";\n        exitButton.onPointerClickObservable.add((value) => {\n            var _a;\n            (_a = this.engine) === null || _a === void 0 ? void 0 : _a.stopRenderLoop();\n            this.canvas.remove();\n        });\n        gui.addControl(rightPanel);\n        rightPanel.addControl(exitButton);\n    }\n    createCamera() {\n        this.camera = new core_1.ArcRotateCamera('camera', core_1.Tools.ToRadians(45), core_1.Tools.ToRadians(90), 18, core_1.Vector3.Zero(), this.scene);\n        this.camera.attachControl();\n    }\n    plotSatellites() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.satellites = this.model.get('satellites');\n            if (this.satellites.length == 0) {\n                return;\n            }\n            const satelliteMeshes = [];\n            satelliteMeshes.push((yield core_1.SceneLoader.ImportMeshAsync(\"\", \"\", this.model.get('satelliteMeshPath'), this.scene)).meshes[0]);\n            for (let i = 1; i < this.satellites.length; i++) {\n                satelliteMeshes.push(satelliteMeshes[0].clone(\"satellite\" + i, null));\n            }\n            for (let i = 0; i < this.satellites.length; i++) {\n                const currentSatellite = this.satellites[i];\n                const currentSatelliteMesh = satelliteMeshes[i];\n                currentSatellite.mesh = currentSatelliteMesh;\n                console.log(\"Loading mesh: \" + currentSatelliteMesh.name + \" for satellite: \" + currentSatellite.name);\n                //this.earth.addChild(currentSatelliteMesh)\n                currentSatelliteMesh.position = new core_1.Vector3(currentSatellite.x, currentSatellite.y, currentSatellite.z);\n                currentSatelliteMesh.lookAt(core_1.Vector3.Zero());\n                currentSatelliteMesh.getChildMeshes()[0].renderOutline = true;\n                currentSatelliteMesh.getChildMeshes()[0].outlineColor = core_1.Color3.White();\n            }\n        });\n    }\n}\nexports.SatelliteMonitorView = SatelliteMonitorView;\n//# sourceMappingURL=widget.js.map","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".custom-widget {\\n  background-color: lightseagreen;\\n  padding: 0px 2px;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export default __webpack_public_path__ + \"06457057fe1b7626859fcc5a69a9c7afc5801ec24b6bc326fd3ade74d929d02d.glb\";","export default __webpack_public_path__ + \"c222aac9d460adda754ee2f97fba1e34411f10e2b8ca7ca4b9219a50fd476d27.glb\";","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js!./widget.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":[],"sourceRoot":""}