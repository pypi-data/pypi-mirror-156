"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import anki.generic_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class NotetypeId(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NTID_FIELD_NUMBER: builtins.int
    ntid: builtins.int
    def __init__(self,
        *,
        ntid: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ntid",b"ntid"]) -> None: ...
global___NotetypeId = NotetypeId

class Notetype(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Config(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class _Kind:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _KindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Notetype.Config._Kind.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            KIND_NORMAL: Notetype.Config._Kind.ValueType  # 0
            KIND_CLOZE: Notetype.Config._Kind.ValueType  # 1
        class Kind(_Kind, metaclass=_KindEnumTypeWrapper):
            pass

        KIND_NORMAL: Notetype.Config.Kind.ValueType  # 0
        KIND_CLOZE: Notetype.Config.Kind.ValueType  # 1

        class CardRequirement(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor
            class _Kind:
                ValueType = typing.NewType('ValueType', builtins.int)
                V: typing_extensions.TypeAlias = ValueType
            class _KindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Notetype.Config.CardRequirement._Kind.ValueType], builtins.type):
                DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
                KIND_NONE: Notetype.Config.CardRequirement._Kind.ValueType  # 0
                KIND_ANY: Notetype.Config.CardRequirement._Kind.ValueType  # 1
                KIND_ALL: Notetype.Config.CardRequirement._Kind.ValueType  # 2
            class Kind(_Kind, metaclass=_KindEnumTypeWrapper):
                pass

            KIND_NONE: Notetype.Config.CardRequirement.Kind.ValueType  # 0
            KIND_ANY: Notetype.Config.CardRequirement.Kind.ValueType  # 1
            KIND_ALL: Notetype.Config.CardRequirement.Kind.ValueType  # 2

            CARD_ORD_FIELD_NUMBER: builtins.int
            KIND_FIELD_NUMBER: builtins.int
            FIELD_ORDS_FIELD_NUMBER: builtins.int
            card_ord: builtins.int
            kind: global___Notetype.Config.CardRequirement.Kind.ValueType
            @property
            def field_ords(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
            def __init__(self,
                *,
                card_ord: builtins.int = ...,
                kind: global___Notetype.Config.CardRequirement.Kind.ValueType = ...,
                field_ords: typing.Optional[typing.Iterable[builtins.int]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["card_ord",b"card_ord","field_ords",b"field_ords","kind",b"kind"]) -> None: ...

        KIND_FIELD_NUMBER: builtins.int
        SORT_FIELD_IDX_FIELD_NUMBER: builtins.int
        CSS_FIELD_NUMBER: builtins.int
        TARGET_DECK_ID_UNUSED_FIELD_NUMBER: builtins.int
        LATEX_PRE_FIELD_NUMBER: builtins.int
        LATEX_POST_FIELD_NUMBER: builtins.int
        LATEX_SVG_FIELD_NUMBER: builtins.int
        REQS_FIELD_NUMBER: builtins.int
        OTHER_FIELD_NUMBER: builtins.int
        kind: global___Notetype.Config.Kind.ValueType
        sort_field_idx: builtins.int
        css: typing.Text
        target_deck_id_unused: builtins.int
        """/ This is now stored separately; retrieve with DefaultsForAdding()"""

        latex_pre: typing.Text
        latex_post: typing.Text
        latex_svg: builtins.bool
        @property
        def reqs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Notetype.Config.CardRequirement]: ...
        other: builtins.bytes
        def __init__(self,
            *,
            kind: global___Notetype.Config.Kind.ValueType = ...,
            sort_field_idx: builtins.int = ...,
            css: typing.Text = ...,
            target_deck_id_unused: builtins.int = ...,
            latex_pre: typing.Text = ...,
            latex_post: typing.Text = ...,
            latex_svg: builtins.bool = ...,
            reqs: typing.Optional[typing.Iterable[global___Notetype.Config.CardRequirement]] = ...,
            other: builtins.bytes = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["css",b"css","kind",b"kind","latex_post",b"latex_post","latex_pre",b"latex_pre","latex_svg",b"latex_svg","other",b"other","reqs",b"reqs","sort_field_idx",b"sort_field_idx","target_deck_id_unused",b"target_deck_id_unused"]) -> None: ...

    class Field(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class Config(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor
            STICKY_FIELD_NUMBER: builtins.int
            RTL_FIELD_NUMBER: builtins.int
            FONT_NAME_FIELD_NUMBER: builtins.int
            FONT_SIZE_FIELD_NUMBER: builtins.int
            DESCRIPTION_FIELD_NUMBER: builtins.int
            OTHER_FIELD_NUMBER: builtins.int
            sticky: builtins.bool
            rtl: builtins.bool
            font_name: typing.Text
            font_size: builtins.int
            description: typing.Text
            other: builtins.bytes
            def __init__(self,
                *,
                sticky: builtins.bool = ...,
                rtl: builtins.bool = ...,
                font_name: typing.Text = ...,
                font_size: builtins.int = ...,
                description: typing.Text = ...,
                other: builtins.bytes = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["description",b"description","font_name",b"font_name","font_size",b"font_size","other",b"other","rtl",b"rtl","sticky",b"sticky"]) -> None: ...

        ORD_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        CONFIG_FIELD_NUMBER: builtins.int
        @property
        def ord(self) -> anki.generic_pb2.UInt32: ...
        name: typing.Text
        @property
        def config(self) -> global___Notetype.Field.Config: ...
        def __init__(self,
            *,
            ord: typing.Optional[anki.generic_pb2.UInt32] = ...,
            name: typing.Text = ...,
            config: typing.Optional[global___Notetype.Field.Config] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["config",b"config","ord",b"ord"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["config",b"config","name",b"name","ord",b"ord"]) -> None: ...

    class Template(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class Config(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor
            Q_FORMAT_FIELD_NUMBER: builtins.int
            A_FORMAT_FIELD_NUMBER: builtins.int
            Q_FORMAT_BROWSER_FIELD_NUMBER: builtins.int
            A_FORMAT_BROWSER_FIELD_NUMBER: builtins.int
            TARGET_DECK_ID_FIELD_NUMBER: builtins.int
            BROWSER_FONT_NAME_FIELD_NUMBER: builtins.int
            BROWSER_FONT_SIZE_FIELD_NUMBER: builtins.int
            OTHER_FIELD_NUMBER: builtins.int
            q_format: typing.Text
            a_format: typing.Text
            q_format_browser: typing.Text
            a_format_browser: typing.Text
            target_deck_id: builtins.int
            browser_font_name: typing.Text
            browser_font_size: builtins.int
            other: builtins.bytes
            def __init__(self,
                *,
                q_format: typing.Text = ...,
                a_format: typing.Text = ...,
                q_format_browser: typing.Text = ...,
                a_format_browser: typing.Text = ...,
                target_deck_id: builtins.int = ...,
                browser_font_name: typing.Text = ...,
                browser_font_size: builtins.int = ...,
                other: builtins.bytes = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["a_format",b"a_format","a_format_browser",b"a_format_browser","browser_font_name",b"browser_font_name","browser_font_size",b"browser_font_size","other",b"other","q_format",b"q_format","q_format_browser",b"q_format_browser","target_deck_id",b"target_deck_id"]) -> None: ...

        ORD_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        MTIME_SECS_FIELD_NUMBER: builtins.int
        USN_FIELD_NUMBER: builtins.int
        CONFIG_FIELD_NUMBER: builtins.int
        @property
        def ord(self) -> anki.generic_pb2.UInt32: ...
        name: typing.Text
        mtime_secs: builtins.int
        usn: builtins.int
        @property
        def config(self) -> global___Notetype.Template.Config: ...
        def __init__(self,
            *,
            ord: typing.Optional[anki.generic_pb2.UInt32] = ...,
            name: typing.Text = ...,
            mtime_secs: builtins.int = ...,
            usn: builtins.int = ...,
            config: typing.Optional[global___Notetype.Template.Config] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["config",b"config","ord",b"ord"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["config",b"config","mtime_secs",b"mtime_secs","name",b"name","ord",b"ord","usn",b"usn"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    MTIME_SECS_FIELD_NUMBER: builtins.int
    USN_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    FIELDS_FIELD_NUMBER: builtins.int
    TEMPLATES_FIELD_NUMBER: builtins.int
    id: builtins.int
    name: typing.Text
    mtime_secs: builtins.int
    usn: builtins.int
    @property
    def config(self) -> global___Notetype.Config: ...
    @property
    def fields(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Notetype.Field]: ...
    @property
    def templates(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Notetype.Template]: ...
    def __init__(self,
        *,
        id: builtins.int = ...,
        name: typing.Text = ...,
        mtime_secs: builtins.int = ...,
        usn: builtins.int = ...,
        config: typing.Optional[global___Notetype.Config] = ...,
        fields: typing.Optional[typing.Iterable[global___Notetype.Field]] = ...,
        templates: typing.Optional[typing.Iterable[global___Notetype.Template]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config",b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config",b"config","fields",b"fields","id",b"id","mtime_secs",b"mtime_secs","name",b"name","templates",b"templates","usn",b"usn"]) -> None: ...
global___Notetype = Notetype

class AddOrUpdateNotetypeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    JSON_FIELD_NUMBER: builtins.int
    PRESERVE_USN_AND_MTIME_FIELD_NUMBER: builtins.int
    SKIP_CHECKS_FIELD_NUMBER: builtins.int
    json: builtins.bytes
    preserve_usn_and_mtime: builtins.bool
    skip_checks: builtins.bool
    def __init__(self,
        *,
        json: builtins.bytes = ...,
        preserve_usn_and_mtime: builtins.bool = ...,
        skip_checks: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["json",b"json","preserve_usn_and_mtime",b"preserve_usn_and_mtime","skip_checks",b"skip_checks"]) -> None: ...
global___AddOrUpdateNotetypeRequest = AddOrUpdateNotetypeRequest

class StockNotetype(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Kind:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _KindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[StockNotetype._Kind.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        BASIC: StockNotetype._Kind.ValueType  # 0
        BASIC_AND_REVERSED: StockNotetype._Kind.ValueType  # 1
        BASIC_OPTIONAL_REVERSED: StockNotetype._Kind.ValueType  # 2
        BASIC_TYPING: StockNotetype._Kind.ValueType  # 3
        CLOZE: StockNotetype._Kind.ValueType  # 4
    class Kind(_Kind, metaclass=_KindEnumTypeWrapper):
        pass

    BASIC: StockNotetype.Kind.ValueType  # 0
    BASIC_AND_REVERSED: StockNotetype.Kind.ValueType  # 1
    BASIC_OPTIONAL_REVERSED: StockNotetype.Kind.ValueType  # 2
    BASIC_TYPING: StockNotetype.Kind.ValueType  # 3
    CLOZE: StockNotetype.Kind.ValueType  # 4

    KIND_FIELD_NUMBER: builtins.int
    kind: global___StockNotetype.Kind.ValueType
    def __init__(self,
        *,
        kind: global___StockNotetype.Kind.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kind",b"kind"]) -> None: ...
global___StockNotetype = StockNotetype

class NotetypeNames(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ENTRIES_FIELD_NUMBER: builtins.int
    @property
    def entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NotetypeNameId]: ...
    def __init__(self,
        *,
        entries: typing.Optional[typing.Iterable[global___NotetypeNameId]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entries",b"entries"]) -> None: ...
global___NotetypeNames = NotetypeNames

class NotetypeUseCounts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ENTRIES_FIELD_NUMBER: builtins.int
    @property
    def entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NotetypeNameIdUseCount]: ...
    def __init__(self,
        *,
        entries: typing.Optional[typing.Iterable[global___NotetypeNameIdUseCount]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entries",b"entries"]) -> None: ...
global___NotetypeUseCounts = NotetypeUseCounts

class NotetypeNameId(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    id: builtins.int
    name: typing.Text
    def __init__(self,
        *,
        id: builtins.int = ...,
        name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name"]) -> None: ...
global___NotetypeNameId = NotetypeNameId

class NotetypeNameIdUseCount(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    USE_COUNT_FIELD_NUMBER: builtins.int
    id: builtins.int
    name: typing.Text
    use_count: builtins.int
    def __init__(self,
        *,
        id: builtins.int = ...,
        name: typing.Text = ...,
        use_count: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name","use_count",b"use_count"]) -> None: ...
global___NotetypeNameIdUseCount = NotetypeNameIdUseCount

class GetAuxConfigKeyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    id: builtins.int
    key: typing.Text
    def __init__(self,
        *,
        id: builtins.int = ...,
        key: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","key",b"key"]) -> None: ...
global___GetAuxConfigKeyRequest = GetAuxConfigKeyRequest

class GetAuxTemplateConfigKeyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NOTETYPE_ID_FIELD_NUMBER: builtins.int
    CARD_ORDINAL_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    notetype_id: builtins.int
    card_ordinal: builtins.int
    key: typing.Text
    def __init__(self,
        *,
        notetype_id: builtins.int = ...,
        card_ordinal: builtins.int = ...,
        key: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["card_ordinal",b"card_ordinal","key",b"key","notetype_id",b"notetype_id"]) -> None: ...
global___GetAuxTemplateConfigKeyRequest = GetAuxTemplateConfigKeyRequest

class GetChangeNotetypeInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    OLD_NOTETYPE_ID_FIELD_NUMBER: builtins.int
    NEW_NOTETYPE_ID_FIELD_NUMBER: builtins.int
    old_notetype_id: builtins.int
    new_notetype_id: builtins.int
    def __init__(self,
        *,
        old_notetype_id: builtins.int = ...,
        new_notetype_id: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["new_notetype_id",b"new_notetype_id","old_notetype_id",b"old_notetype_id"]) -> None: ...
global___GetChangeNotetypeInfoRequest = GetChangeNotetypeInfoRequest

class ChangeNotetypeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NOTE_IDS_FIELD_NUMBER: builtins.int
    NEW_FIELDS_FIELD_NUMBER: builtins.int
    NEW_TEMPLATES_FIELD_NUMBER: builtins.int
    OLD_NOTETYPE_ID_FIELD_NUMBER: builtins.int
    NEW_NOTETYPE_ID_FIELD_NUMBER: builtins.int
    CURRENT_SCHEMA_FIELD_NUMBER: builtins.int
    OLD_NOTETYPE_NAME_FIELD_NUMBER: builtins.int
    @property
    def note_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def new_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """-1 is used to represent null, as nullable repeated fields
        are unwieldy in protobuf
        """
        pass
    @property
    def new_templates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    old_notetype_id: builtins.int
    new_notetype_id: builtins.int
    current_schema: builtins.int
    old_notetype_name: typing.Text
    def __init__(self,
        *,
        note_ids: typing.Optional[typing.Iterable[builtins.int]] = ...,
        new_fields: typing.Optional[typing.Iterable[builtins.int]] = ...,
        new_templates: typing.Optional[typing.Iterable[builtins.int]] = ...,
        old_notetype_id: builtins.int = ...,
        new_notetype_id: builtins.int = ...,
        current_schema: builtins.int = ...,
        old_notetype_name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["current_schema",b"current_schema","new_fields",b"new_fields","new_notetype_id",b"new_notetype_id","new_templates",b"new_templates","note_ids",b"note_ids","old_notetype_id",b"old_notetype_id","old_notetype_name",b"old_notetype_name"]) -> None: ...
global___ChangeNotetypeRequest = ChangeNotetypeRequest

class ChangeNotetypeInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    OLD_FIELD_NAMES_FIELD_NUMBER: builtins.int
    OLD_TEMPLATE_NAMES_FIELD_NUMBER: builtins.int
    NEW_FIELD_NAMES_FIELD_NUMBER: builtins.int
    NEW_TEMPLATE_NAMES_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    OLD_NOTETYPE_NAME_FIELD_NUMBER: builtins.int
    @property
    def old_field_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def old_template_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def new_field_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def new_template_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def input(self) -> global___ChangeNotetypeRequest: ...
    old_notetype_name: typing.Text
    def __init__(self,
        *,
        old_field_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        old_template_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        new_field_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        new_template_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        input: typing.Optional[global___ChangeNotetypeRequest] = ...,
        old_notetype_name: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["input",b"input"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["input",b"input","new_field_names",b"new_field_names","new_template_names",b"new_template_names","old_field_names",b"old_field_names","old_notetype_name",b"old_notetype_name","old_template_names",b"old_template_names"]) -> None: ...
global___ChangeNotetypeInfo = ChangeNotetypeInfo
