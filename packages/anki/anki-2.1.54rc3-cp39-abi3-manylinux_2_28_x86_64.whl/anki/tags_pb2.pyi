"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class SetTagCollapsedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    COLLAPSED_FIELD_NUMBER: builtins.int
    name: typing.Text
    collapsed: builtins.bool
    def __init__(self,
        *,
        name: typing.Text = ...,
        collapsed: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["collapsed",b"collapsed","name",b"name"]) -> None: ...
global___SetTagCollapsedRequest = SetTagCollapsedRequest

class TagTreeNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    CHILDREN_FIELD_NUMBER: builtins.int
    LEVEL_FIELD_NUMBER: builtins.int
    COLLAPSED_FIELD_NUMBER: builtins.int
    name: typing.Text
    @property
    def children(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TagTreeNode]: ...
    level: builtins.int
    collapsed: builtins.bool
    def __init__(self,
        *,
        name: typing.Text = ...,
        children: typing.Optional[typing.Iterable[global___TagTreeNode]] = ...,
        level: builtins.int = ...,
        collapsed: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["children",b"children","collapsed",b"collapsed","level",b"level","name",b"name"]) -> None: ...
global___TagTreeNode = TagTreeNode

class ReparentTagsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TAGS_FIELD_NUMBER: builtins.int
    NEW_PARENT_FIELD_NUMBER: builtins.int
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    new_parent: typing.Text
    def __init__(self,
        *,
        tags: typing.Optional[typing.Iterable[typing.Text]] = ...,
        new_parent: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["new_parent",b"new_parent","tags",b"tags"]) -> None: ...
global___ReparentTagsRequest = ReparentTagsRequest

class RenameTagsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CURRENT_PREFIX_FIELD_NUMBER: builtins.int
    NEW_PREFIX_FIELD_NUMBER: builtins.int
    current_prefix: typing.Text
    new_prefix: typing.Text
    def __init__(self,
        *,
        current_prefix: typing.Text = ...,
        new_prefix: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["current_prefix",b"current_prefix","new_prefix",b"new_prefix"]) -> None: ...
global___RenameTagsRequest = RenameTagsRequest

class NoteIdsAndTagsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NOTE_IDS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def note_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    tags: typing.Text
    def __init__(self,
        *,
        note_ids: typing.Optional[typing.Iterable[builtins.int]] = ...,
        tags: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["note_ids",b"note_ids","tags",b"tags"]) -> None: ...
global___NoteIdsAndTagsRequest = NoteIdsAndTagsRequest

class FindAndReplaceTagRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NOTE_IDS_FIELD_NUMBER: builtins.int
    SEARCH_FIELD_NUMBER: builtins.int
    REPLACEMENT_FIELD_NUMBER: builtins.int
    REGEX_FIELD_NUMBER: builtins.int
    MATCH_CASE_FIELD_NUMBER: builtins.int
    @property
    def note_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    search: typing.Text
    replacement: typing.Text
    regex: builtins.bool
    match_case: builtins.bool
    def __init__(self,
        *,
        note_ids: typing.Optional[typing.Iterable[builtins.int]] = ...,
        search: typing.Text = ...,
        replacement: typing.Text = ...,
        regex: builtins.bool = ...,
        match_case: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["match_case",b"match_case","note_ids",b"note_ids","regex",b"regex","replacement",b"replacement","search",b"search"]) -> None: ...
global___FindAndReplaceTagRequest = FindAndReplaceTagRequest

class CompleteTagRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INPUT_FIELD_NUMBER: builtins.int
    MATCH_LIMIT_FIELD_NUMBER: builtins.int
    input: typing.Text
    """a partial tag, optionally delimited with ::"""

    match_limit: builtins.int
    def __init__(self,
        *,
        input: typing.Text = ...,
        match_limit: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["input",b"input","match_limit",b"match_limit"]) -> None: ...
global___CompleteTagRequest = CompleteTagRequest

class CompleteTagResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        tags: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["tags",b"tags"]) -> None: ...
global___CompleteTagResponse = CompleteTagResponse
