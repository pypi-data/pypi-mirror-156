# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from loopgrpc.compiled import server_pb2 as loopgrpc_dot_compiled_dot_server__pb2


class SwapServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LoopOutTerms = channel.unary_unary(
                '/looprpc.SwapServer/LoopOutTerms',
                request_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutTermsRequest.SerializeToString,
                response_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutTerms.FromString,
                )
        self.NewLoopOutSwap = channel.unary_unary(
                '/looprpc.SwapServer/NewLoopOutSwap',
                request_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutRequest.SerializeToString,
                response_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutResponse.FromString,
                )
        self.LoopOutPushPreimage = channel.unary_unary(
                '/looprpc.SwapServer/LoopOutPushPreimage',
                request_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutPushPreimageRequest.SerializeToString,
                response_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutPushPreimageResponse.FromString,
                )
        self.LoopOutQuote = channel.unary_unary(
                '/looprpc.SwapServer/LoopOutQuote',
                request_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutQuoteRequest.SerializeToString,
                response_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutQuote.FromString,
                )
        self.LoopInTerms = channel.unary_unary(
                '/looprpc.SwapServer/LoopInTerms',
                request_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInTermsRequest.SerializeToString,
                response_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInTerms.FromString,
                )
        self.NewLoopInSwap = channel.unary_unary(
                '/looprpc.SwapServer/NewLoopInSwap',
                request_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInRequest.SerializeToString,
                response_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInResponse.FromString,
                )
        self.LoopInQuote = channel.unary_unary(
                '/looprpc.SwapServer/LoopInQuote',
                request_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInQuoteRequest.SerializeToString,
                response_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInQuoteResponse.FromString,
                )
        self.SubscribeLoopOutUpdates = channel.unary_stream(
                '/looprpc.SwapServer/SubscribeLoopOutUpdates',
                request_serializer=loopgrpc_dot_compiled_dot_server__pb2.SubscribeUpdatesRequest.SerializeToString,
                response_deserializer=loopgrpc_dot_compiled_dot_server__pb2.SubscribeLoopOutUpdatesResponse.FromString,
                )
        self.SubscribeLoopInUpdates = channel.unary_stream(
                '/looprpc.SwapServer/SubscribeLoopInUpdates',
                request_serializer=loopgrpc_dot_compiled_dot_server__pb2.SubscribeUpdatesRequest.SerializeToString,
                response_deserializer=loopgrpc_dot_compiled_dot_server__pb2.SubscribeLoopInUpdatesResponse.FromString,
                )
        self.CancelLoopOutSwap = channel.unary_unary(
                '/looprpc.SwapServer/CancelLoopOutSwap',
                request_serializer=loopgrpc_dot_compiled_dot_server__pb2.CancelLoopOutSwapRequest.SerializeToString,
                response_deserializer=loopgrpc_dot_compiled_dot_server__pb2.CancelLoopOutSwapResponse.FromString,
                )
        self.Probe = channel.unary_unary(
                '/looprpc.SwapServer/Probe',
                request_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerProbeRequest.SerializeToString,
                response_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerProbeResponse.FromString,
                )
        self.RecommendRoutingPlugin = channel.unary_unary(
                '/looprpc.SwapServer/RecommendRoutingPlugin',
                request_serializer=loopgrpc_dot_compiled_dot_server__pb2.RecommendRoutingPluginReq.SerializeToString,
                response_deserializer=loopgrpc_dot_compiled_dot_server__pb2.RecommendRoutingPluginRes.FromString,
                )
        self.ReportRoutingResult = channel.unary_unary(
                '/looprpc.SwapServer/ReportRoutingResult',
                request_serializer=loopgrpc_dot_compiled_dot_server__pb2.ReportRoutingResultReq.SerializeToString,
                response_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ReportRoutingResultRes.FromString,
                )


class SwapServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LoopOutTerms(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewLoopOutSwap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoopOutPushPreimage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoopOutQuote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoopInTerms(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewLoopInSwap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoopInQuote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeLoopOutUpdates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeLoopInUpdates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelLoopOutSwap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Probe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecommendRoutingPlugin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportRoutingResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SwapServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LoopOutTerms': grpc.unary_unary_rpc_method_handler(
                    servicer.LoopOutTerms,
                    request_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutTermsRequest.FromString,
                    response_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutTerms.SerializeToString,
            ),
            'NewLoopOutSwap': grpc.unary_unary_rpc_method_handler(
                    servicer.NewLoopOutSwap,
                    request_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutRequest.FromString,
                    response_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutResponse.SerializeToString,
            ),
            'LoopOutPushPreimage': grpc.unary_unary_rpc_method_handler(
                    servicer.LoopOutPushPreimage,
                    request_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutPushPreimageRequest.FromString,
                    response_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutPushPreimageResponse.SerializeToString,
            ),
            'LoopOutQuote': grpc.unary_unary_rpc_method_handler(
                    servicer.LoopOutQuote,
                    request_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutQuoteRequest.FromString,
                    response_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutQuote.SerializeToString,
            ),
            'LoopInTerms': grpc.unary_unary_rpc_method_handler(
                    servicer.LoopInTerms,
                    request_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInTermsRequest.FromString,
                    response_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInTerms.SerializeToString,
            ),
            'NewLoopInSwap': grpc.unary_unary_rpc_method_handler(
                    servicer.NewLoopInSwap,
                    request_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInRequest.FromString,
                    response_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInResponse.SerializeToString,
            ),
            'LoopInQuote': grpc.unary_unary_rpc_method_handler(
                    servicer.LoopInQuote,
                    request_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInQuoteRequest.FromString,
                    response_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInQuoteResponse.SerializeToString,
            ),
            'SubscribeLoopOutUpdates': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeLoopOutUpdates,
                    request_deserializer=loopgrpc_dot_compiled_dot_server__pb2.SubscribeUpdatesRequest.FromString,
                    response_serializer=loopgrpc_dot_compiled_dot_server__pb2.SubscribeLoopOutUpdatesResponse.SerializeToString,
            ),
            'SubscribeLoopInUpdates': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeLoopInUpdates,
                    request_deserializer=loopgrpc_dot_compiled_dot_server__pb2.SubscribeUpdatesRequest.FromString,
                    response_serializer=loopgrpc_dot_compiled_dot_server__pb2.SubscribeLoopInUpdatesResponse.SerializeToString,
            ),
            'CancelLoopOutSwap': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelLoopOutSwap,
                    request_deserializer=loopgrpc_dot_compiled_dot_server__pb2.CancelLoopOutSwapRequest.FromString,
                    response_serializer=loopgrpc_dot_compiled_dot_server__pb2.CancelLoopOutSwapResponse.SerializeToString,
            ),
            'Probe': grpc.unary_unary_rpc_method_handler(
                    servicer.Probe,
                    request_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ServerProbeRequest.FromString,
                    response_serializer=loopgrpc_dot_compiled_dot_server__pb2.ServerProbeResponse.SerializeToString,
            ),
            'RecommendRoutingPlugin': grpc.unary_unary_rpc_method_handler(
                    servicer.RecommendRoutingPlugin,
                    request_deserializer=loopgrpc_dot_compiled_dot_server__pb2.RecommendRoutingPluginReq.FromString,
                    response_serializer=loopgrpc_dot_compiled_dot_server__pb2.RecommendRoutingPluginRes.SerializeToString,
            ),
            'ReportRoutingResult': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportRoutingResult,
                    request_deserializer=loopgrpc_dot_compiled_dot_server__pb2.ReportRoutingResultReq.FromString,
                    response_serializer=loopgrpc_dot_compiled_dot_server__pb2.ReportRoutingResultRes.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'looprpc.SwapServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SwapServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LoopOutTerms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/looprpc.SwapServer/LoopOutTerms',
            loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutTermsRequest.SerializeToString,
            loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutTerms.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewLoopOutSwap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/looprpc.SwapServer/NewLoopOutSwap',
            loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutRequest.SerializeToString,
            loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoopOutPushPreimage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/looprpc.SwapServer/LoopOutPushPreimage',
            loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutPushPreimageRequest.SerializeToString,
            loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutPushPreimageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoopOutQuote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/looprpc.SwapServer/LoopOutQuote',
            loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutQuoteRequest.SerializeToString,
            loopgrpc_dot_compiled_dot_server__pb2.ServerLoopOutQuote.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoopInTerms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/looprpc.SwapServer/LoopInTerms',
            loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInTermsRequest.SerializeToString,
            loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInTerms.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewLoopInSwap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/looprpc.SwapServer/NewLoopInSwap',
            loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInRequest.SerializeToString,
            loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoopInQuote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/looprpc.SwapServer/LoopInQuote',
            loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInQuoteRequest.SerializeToString,
            loopgrpc_dot_compiled_dot_server__pb2.ServerLoopInQuoteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeLoopOutUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/looprpc.SwapServer/SubscribeLoopOutUpdates',
            loopgrpc_dot_compiled_dot_server__pb2.SubscribeUpdatesRequest.SerializeToString,
            loopgrpc_dot_compiled_dot_server__pb2.SubscribeLoopOutUpdatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeLoopInUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/looprpc.SwapServer/SubscribeLoopInUpdates',
            loopgrpc_dot_compiled_dot_server__pb2.SubscribeUpdatesRequest.SerializeToString,
            loopgrpc_dot_compiled_dot_server__pb2.SubscribeLoopInUpdatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelLoopOutSwap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/looprpc.SwapServer/CancelLoopOutSwap',
            loopgrpc_dot_compiled_dot_server__pb2.CancelLoopOutSwapRequest.SerializeToString,
            loopgrpc_dot_compiled_dot_server__pb2.CancelLoopOutSwapResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Probe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/looprpc.SwapServer/Probe',
            loopgrpc_dot_compiled_dot_server__pb2.ServerProbeRequest.SerializeToString,
            loopgrpc_dot_compiled_dot_server__pb2.ServerProbeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecommendRoutingPlugin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/looprpc.SwapServer/RecommendRoutingPlugin',
            loopgrpc_dot_compiled_dot_server__pb2.RecommendRoutingPluginReq.SerializeToString,
            loopgrpc_dot_compiled_dot_server__pb2.RecommendRoutingPluginRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReportRoutingResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/looprpc.SwapServer/ReportRoutingResult',
            loopgrpc_dot_compiled_dot_server__pb2.ReportRoutingResultReq.SerializeToString,
            loopgrpc_dot_compiled_dot_server__pb2.ReportRoutingResultRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
