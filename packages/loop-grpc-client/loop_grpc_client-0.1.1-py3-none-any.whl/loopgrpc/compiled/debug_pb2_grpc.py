# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from loopgrpc.compiled import debug_pb2 as loopgrpc_dot_compiled_dot_debug__pb2


class DebugStub(object):
    """
    Debug is a service that exposes endpoints intended for testing purposes. These
    endpoints should not operate on mainnet, and should only be included if loop is
    built with the dev build tag.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ForceAutoLoop = channel.unary_unary(
                '/looprpc.Debug/ForceAutoLoop',
                request_serializer=loopgrpc_dot_compiled_dot_debug__pb2.ForceAutoLoopRequest.SerializeToString,
                response_deserializer=loopgrpc_dot_compiled_dot_debug__pb2.ForceAutoLoopResponse.FromString,
                )


class DebugServicer(object):
    """
    Debug is a service that exposes endpoints intended for testing purposes. These
    endpoints should not operate on mainnet, and should only be included if loop is
    built with the dev build tag.
    """

    def ForceAutoLoop(self, request, context):
        """
        ForceAutoLoop is intended for *testing purposes only* and will not work on
        mainnet. This endpoint ticks our autoloop timer, triggering automated
        dispatch of a swap if one is suggested.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DebugServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ForceAutoLoop': grpc.unary_unary_rpc_method_handler(
                    servicer.ForceAutoLoop,
                    request_deserializer=loopgrpc_dot_compiled_dot_debug__pb2.ForceAutoLoopRequest.FromString,
                    response_serializer=loopgrpc_dot_compiled_dot_debug__pb2.ForceAutoLoopResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'looprpc.Debug', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Debug(object):
    """
    Debug is a service that exposes endpoints intended for testing purposes. These
    endpoints should not operate on mainnet, and should only be included if loop is
    built with the dev build tag.
    """

    @staticmethod
    def ForceAutoLoop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/looprpc.Debug/ForceAutoLoop',
            loopgrpc_dot_compiled_dot_debug__pb2.ForceAutoLoopRequest.SerializeToString,
            loopgrpc_dot_compiled_dot_debug__pb2.ForceAutoLoopResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
