Metadata-Version: 2.1
Name: neon-audio
Version: 1.0.2a2
Summary: Neon Audio Module
Home-page: https://github.com/NeonGeckoCom/neon_audio
Author: Neongecko
Author-email: developers@neon.ai
License: NeonAI License v1.0
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/markdown
Requires-Dist: mycroft-messagebus-client (>0.9.3,~=0.9)
Requires-Dist: ovos-utils (~=0.0.12)
Requires-Dist: phoneme-guesser (~=0.1)
Requires-Dist: ovos-plugin-manager (~=0.0.4)
Requires-Dist: neon-utils (~=0.17)
Requires-Dist: click (~=8.0)
Requires-Dist: click-default-group (~=1.2)
Requires-Dist: ovos-core (==0.0.4a24,~=0.0.3)
Provides-Extra: docker
Requires-Dist: ovos-lingua-franca (>=0.4.4,~=0.4) ; extra == 'docker'
Requires-Dist: neon-tts-plugin-mimic (~=0.1) ; extra == 'docker'
Requires-Dist: neon-lang-plugin-libretranslate (~=0.1) ; extra == 'docker'

# Neon Audio
Audio Module for Neon Core. This module can be treated as a replacement for the
[mycroft-core](https://github.com/MycroftAI/mycroft-core) speech module. This module handles input text, performs TTS, 
and optionally returns the audio or plays it back locally.

## Neon Enhancements
`neon-audio` extends `mycroft-audio` with the following added functionality:
* Support for translated output languages
* Support for multiple language spoken responses (multiple users and/or multi-language users)
* Messagebus API listeners to handle outside requests for TTS
* Arbitrary configuration supported by passing at module init

## Compatibility
Mycroft TTS plugins are compatible with `neon-speech`.

## Running in Docker
The included `Dockerfile` may be used to build a docker container for the neon_audio module. The below command may be used
to start the container.

```shell
docker run -d \
--network=host \
--name=neon_audio \
-v ~/.config/pulse/cookie:/root/.config/pulse/cookie:ro \
-v ${XDG_RUNTIME_DIR}/pulse:${XDG_RUNTIME_DIR}/pulse:ro \
-v ${NEON_CONFIG_DIR}:/config \
--device=/dev/snd:/dev/snd \
-e PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native \
-e PULSE_COOKIE=/root/.config/pulse/cookie \
neon_audio
```
>*Note:* The above example assumes `NEON_CONFIG_DIR` contains valid configuration


