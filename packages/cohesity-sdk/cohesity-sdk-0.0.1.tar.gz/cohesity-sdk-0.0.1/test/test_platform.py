"""
    Cohesity REST API

    Cohesity API provides a RESTful interface to access the various data management operations on Cohesity cluster and Helios.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


import unittest

import cohesity_sdk
from cohesity_sdk.api.platform import PlatformApi  # noqa: E501


class TestPlatformApi(unittest.TestCase):
    """PlatformApi unit test stubs"""

    def setUp(self):
        self.api = PlatformApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_remote_disk(self):
        """Test case for add_remote_disk

        Add remote disk  # noqa: E501
        """
        pass

    def test_add_syslog_server(self):
        """Test case for add_syslog_server

        Add Syslog Server  # noqa: E501
        """
        pass

    def test_clear_smtp_configuration(self):
        """Test case for clear_smtp_configuration

        Clear SMTP configuration.  # noqa: E501
        """
        pass

    def test_create_cluster(self):
        """Test case for create_cluster

        Create a cluster.  # noqa: E501
        """
        pass

    def test_create_racks(self):
        """Test case for create_racks

        Create racks  # noqa: E501
        """
        pass

    def test_delete_amqp_target_config(self):
        """Test case for delete_amqp_target_config

        Delete AMQP Target Config  # noqa: E501
        """
        pass

    def test_delete_rack_by_id(self):
        """Test case for delete_rack_by_id

        Delete a rack by id.  # noqa: E501
        """
        pass

    def test_delete_racks(self):
        """Test case for delete_racks

        Delete all the racks.  # noqa: E501
        """
        pass

    def test_delete_remote_storage_registration(self):
        """Test case for delete_remote_storage_registration

        Delete Remote Storage Registration  # noqa: E501
        """
        pass

    def test_destroy_cluster(self):
        """Test case for destroy_cluster

        Destroy a cluster.  # noqa: E501
        """
        pass

    def test_discover_disks(self):
        """Test case for discover_disks

        Discover new disks  # noqa: E501
        """
        pass

    def test_disk_identify(self):
        """Test case for disk_identify

        Identify a disk  # noqa: E501
        """
        pass

    def test_disks_assimilate(self):
        """Test case for disks_assimilate

        Assimilate disks.  # noqa: E501
        """
        pass

    def test_expand_cluster_nodes(self):
        """Test case for expand_cluster_nodes

        Expand the cluster.  # noqa: E501
        """
        pass

    def test_get_alert_summary(self):
        """Test case for get_alert_summary

        Get alerts summary.  # noqa: E501
        """
        pass

    def test_get_amqp_target_config(self):
        """Test case for get_amqp_target_config

        Get AMQP Target Config  # noqa: E501
        """
        pass

    def test_get_chassis(self):
        """Test case for get_chassis

        Get list of chassis  # noqa: E501
        """
        pass

    def test_get_chassis_by_id(self):
        """Test case for get_chassis_by_id

        Get a chassis by chassis id.  # noqa: E501
        """
        pass

    def test_get_cluster(self):
        """Test case for get_cluster

        Retrieve Cluster Configuration  # noqa: E501
        """
        pass

    def test_get_cluster_destroy_hmac(self):
        """Test case for get_cluster_destroy_hmac

        Retrieve specific cluster information.  # noqa: E501
        """
        pass

    def test_get_cluster_operation_status(self):
        """Test case for get_cluster_operation_status

        Get cluster operations status.  # noqa: E501
        """
        pass

    def test_get_cluster_state(self):
        """Test case for get_cluster_state

        Get cluster state  # noqa: E501
        """
        pass

    def test_get_network_interfaces(self):
        """Test case for get_network_interfaces

        Get list of interfaces  # noqa: E501
        """
        pass

    def test_get_rack_by_id(self):
        """Test case for get_rack_by_id

        Get a rack by rack id.  # noqa: E501
        """
        pass

    def test_get_racks(self):
        """Test case for get_racks

        Get list of racks  # noqa: E501
        """
        pass

    def test_get_registered_remote_storage_list(self):
        """Test case for get_registered_remote_storage_list

        Get Registered Remote Storage Servers List  # noqa: E501
        """
        pass

    def test_get_remote_disks(self):
        """Test case for get_remote_disks

        Get remote disks  # noqa: E501
        """
        pass

    def test_get_remote_storage_details(self):
        """Test case for get_remote_storage_details

        Get remote storage details  # noqa: E501
        """
        pass

    def test_get_smtp_configuration(self):
        """Test case for get_smtp_configuration

        Get SMTP configuration.  # noqa: E501
        """
        pass

    def test_get_support_channel_config(self):
        """Test case for get_support_channel_config

        Get support channel configuration.  # noqa: E501
        """
        pass

    def test_get_supported_syslog_program_names(self):
        """Test case for get_supported_syslog_program_names

        Get supported program names.  # noqa: E501
        """
        pass

    def test_get_syslog_audit_tags(self):
        """Test case for get_syslog_audit_tags

        Get cluster audit tags.  # noqa: E501
        """
        pass

    def test_get_syslog_server_by_id(self):
        """Test case for get_syslog_server_by_id

        Get a syslog server by id.  # noqa: E501
        """
        pass

    def test_get_syslog_server_status_by_id(self):
        """Test case for get_syslog_server_status_by_id

        Get a syslog server reachability status.  # noqa: E501
        """
        pass

    def test_get_syslog_servers(self):
        """Test case for get_syslog_servers

        Get list of syslog servers.  # noqa: E501
        """
        pass

    def test_identify_node(self):
        """Test case for identify_node

        Identify node  # noqa: E501
        """
        pass

    def test_list_disks(self):
        """Test case for list_disks

        Get list of disks  # noqa: E501
        """
        pass

    def test_mark_disk_removal(self):
        """Test case for mark_disk_removal

        Mark Disk for removal  # noqa: E501
        """
        pass

    def test_mark_node_removal(self):
        """Test case for mark_node_removal

        Mark Node for removal  # noqa: E501
        """
        pass

    def test_patch_syslog_server_by_id(self):
        """Test case for patch_syslog_server_by_id

        Patch a syslog server by id.  # noqa: E501
        """
        pass

    def test_register_new_remote_storage(self):
        """Test case for register_new_remote_storage

        Register Remote Storage  # noqa: E501
        """
        pass

    def test_remove_cluster_node(self):
        """Test case for remove_cluster_node

        Remove node  # noqa: E501
        """
        pass

    def test_remove_remote_disk(self):
        """Test case for remove_remote_disk

        Remove remote disk  # noqa: E501
        """
        pass

    def test_remove_syslog_server(self):
        """Test case for remove_syslog_server

        Remove syslog server by id  # noqa: E501
        """
        pass

    def test_remove_syslog_servers(self):
        """Test case for remove_syslog_servers

        Remove syslog servers  # noqa: E501
        """
        pass

    def test_set_node_power(self):
        """Test case for set_node_power

        Reboot or shutdown nodes in cluster.  # noqa: E501
        """
        pass

    def test_update_amqp_target_config(self):
        """Test case for update_amqp_target_config

        Update AMQP Target Config  # noqa: E501
        """
        pass

    def test_update_chassis_by_id(self):
        """Test case for update_chassis_by_id

        Update a chassis by chassis id.  # noqa: E501
        """
        pass

    def test_update_cluster(self):
        """Test case for update_cluster

        Update a cluster.  # noqa: E501
        """
        pass

    def test_update_cluster_bifrost_config(self):
        """Test case for update_cluster_bifrost_config

        Update cluster Bifrost config.  # noqa: E501
        """
        pass

    def test_update_rack_by_id(self):
        """Test case for update_rack_by_id

        """
        pass

    def test_update_racks(self):
        """Test case for update_racks

        Update racks  # noqa: E501
        """
        pass

    def test_update_remote_storage_registration(self):
        """Test case for update_remote_storage_registration

        Update Remote Storage Config  # noqa: E501
        """
        pass

    def test_update_smtp_configuration(self):
        """Test case for update_smtp_configuration

        Update SMTP configuration.  # noqa: E501
        """
        pass

    def test_update_support_channel_config(self):
        """Test case for update_support_channel_config

        Update support channel configuration.  # noqa: E501
        """
        pass

    def test_update_syslog_audit_tags(self):
        """Test case for update_syslog_audit_tags

        Update cluster audit tags.  # noqa: E501
        """
        pass

    def test_update_syslog_server_by_id(self):
        """Test case for update_syslog_server_by_id

        Update a syslog server by id.  # noqa: E501
        """
        pass

    def test_upgrade_cluster_software(self):
        """Test case for upgrade_cluster_software

        Upgrade cluster  # noqa: E501
        """
        pass

    def test_upload_file_package(self):
        """Test case for upload_file_package

        Upload package by file  # noqa: E501
        """
        pass

    def test_upload_package_by_url(self):
        """Test case for upload_package_by_url

        Upload package by URL  # noqa: E501
        """
        pass

    def test_validate_smtp_configuration(self):
        """Test case for validate_smtp_configuration

        Validate SMTP configuration.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
