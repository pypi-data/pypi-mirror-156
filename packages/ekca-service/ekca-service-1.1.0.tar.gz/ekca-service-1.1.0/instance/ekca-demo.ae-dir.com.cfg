############################################################################
# Settings for ekca_service used with AE-DIR's demo service
# see https://www.ae-dir.com/demo.html
############################################################################

import logging

DEBUG = True

TESTING = True

# maximum byte size of incoming requests
MAX_CONTENT_LENGTH = 500

# global timeout default passed to socket.setdefaulttimeout()
SOCKET_TIMEOUT = 5.0

#---------------------------------------------------------------------------
# Validation parameters
#---------------------------------------------------------------------------

# regex pattern for restricting user names
VALID_USERNAME_REGEX = '^[a-z]+$'

# regex pattern for restricting OTP values
# here: 8-digit OTP prefixed with OATH identifier
VALID_OTP_REGEX = '^[a-z]{4}[0-9]{8}[0-9]{8}$'

#---------------------------------------------------------------------------
# SSH-CA parameters
#---------------------------------------------------------------------------

# name of SSH CA instance
SSH_CA_NAME = 'sshca'

# full pathname of root directory where to store all CA data
SSH_CA_DIR = '/opt/ekca/ssh-ca'

# SSH delta time format specifying the validity period of SSH user cert
SSH_CERT_VALIDITY = '+1h'

# default SSH cert extensions
# see https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.certkeys
# Note: values are case-sensitive!
SSH_CERT_PERMISSIONS = [
    'pty',
#    'X11-forwarding',
#    'agent-forwarding',
#    'port-forwarding',
#    'user-rc',
]

# LDAP attribute from where to read the SSH key permissions for ssh-keygen -O
SSH_CERT_PERMISSIONS_ATTR = 'aeSSHPermissions'

# Where to get the user's client IP to be added as cert option
# from the HTTP request's remote address attribute
#SSH_FROMIP_METHOD = 'request.remote_addr'
# from LDAP attribute 'aeRemoteHost' in user's LDAP entry
SSH_FROMIP_METHOD = 'user:aeRemoteHost'

#---------------------------------------------------------------------------
# Parameters for separate OTP check web service
#---------------------------------------------------------------------------

# Plugin module for checking OTP
#OTP_CHECK_MOD = 'linotp'

# if set the OTP is separately checked against given web API
# otherwise OTP is appended to LDAP password (for OATH-LDAP)
#OTP_CHECK_URL = 'https://user:password@mfa.example.com/validate/check'

#---------------------------------------------------------------------------
# LDAP parameters
#---------------------------------------------------------------------------

# LDAP connection parameters
LDAP_URI = 'ldaps://demo.ae-dir.com'
LDAP_CA_CERT = '/etc/ssl/ca-bundle.pem'

# String format template of user bind-DN
# Setting this avoids having to search for users which gives better
# performance (less network roundtrips).
# But...
# 1. it does not work if users are spread in different sub-trees
# 2. LDAP_SEARCH_FILTER is not applied which could help enforcing
#    some level of pre-authorization
#LDAP_USER_DN = 'uid={username},ou=ae-dir'

# rest of parameters only used when LDAP_USER_DN is not set
#----------------------------------------------------------

# bind-DN and password of service
LDAP_BIND_DN = 'uid=system_ssh-ca-1,ou=ae-dir'
LDAP_BIND_PW = 'lkbvgzcVcWaJRwEaMJoHVpkq'

# parameters for searching user's bind-DN in case LDAP_USER_DN is None

# the sub tree where to search
LDAP_SEARCH_BASE = 'ou=ae-dir'

# the search scope
LDAP_SEARCH_SCOPE = 'SUBTREE'

# String formatting template for LDAP filter for searching the user's entry
# with two variables:
# username - the user's name
# raddr - the remote IP address where the user invokes the SSH client
LDAP_SEARCH_FILTER = '(&(uid={username})(|(!(aeRemoteHost=*))(aeRemoteHost={raddr})))'
