# autogenerated
# mypy: ignore-errors
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from rime_sdk.protos.feature_flag import feature_flag_pb2 as protos_dot_feature__flag_dot_feature__flag__pb2


class FeatureFlagStub(object):
    """Service for managing feature flags.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListAllCustomerNames = channel.unary_unary(
                '/rime.FeatureFlag/ListAllCustomerNames',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=protos_dot_feature__flag_dot_feature__flag__pb2.ListAllCustomerNamesResponse.FromString,
                )
        self.CreateFeatureFlag = channel.unary_unary(
                '/rime.FeatureFlag/CreateFeatureFlag',
                request_serializer=protos_dot_feature__flag_dot_feature__flag__pb2.CreateFeatureFlagsRequest.SerializeToString,
                response_deserializer=protos_dot_feature__flag_dot_feature__flag__pb2.CreateFeatureFlagsResponse.FromString,
                )
        self.GetFeatureFlag = channel.unary_unary(
                '/rime.FeatureFlag/GetFeatureFlag',
                request_serializer=protos_dot_feature__flag_dot_feature__flag__pb2.GetFeatureFlagsRequest.SerializeToString,
                response_deserializer=protos_dot_feature__flag_dot_feature__flag__pb2.GetFeatureFlagsResponse.FromString,
                )
        self.UpdateFeatureFlag = channel.unary_unary(
                '/rime.FeatureFlag/UpdateFeatureFlag',
                request_serializer=protos_dot_feature__flag_dot_feature__flag__pb2.UpdateFeatureFlagsRequest.SerializeToString,
                response_deserializer=protos_dot_feature__flag_dot_feature__flag__pb2.UpdateFeatureFlagsResponse.FromString,
                )
        self.DeleteFeatureFlag = channel.unary_unary(
                '/rime.FeatureFlag/DeleteFeatureFlag',
                request_serializer=protos_dot_feature__flag_dot_feature__flag__pb2.DeleteFeatureFlagRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class FeatureFlagServicer(object):
    """Service for managing feature flags.
    """

    def ListAllCustomerNames(self, request, context):
        """Returns all customers in current cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFeatureFlag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeatureFlag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFeatureFlag(self, request, context):
        """Return the updated object in case of successful update.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFeatureFlag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FeatureFlagServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListAllCustomerNames': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAllCustomerNames,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=protos_dot_feature__flag_dot_feature__flag__pb2.ListAllCustomerNamesResponse.SerializeToString,
            ),
            'CreateFeatureFlag': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFeatureFlag,
                    request_deserializer=protos_dot_feature__flag_dot_feature__flag__pb2.CreateFeatureFlagsRequest.FromString,
                    response_serializer=protos_dot_feature__flag_dot_feature__flag__pb2.CreateFeatureFlagsResponse.SerializeToString,
            ),
            'GetFeatureFlag': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeatureFlag,
                    request_deserializer=protos_dot_feature__flag_dot_feature__flag__pb2.GetFeatureFlagsRequest.FromString,
                    response_serializer=protos_dot_feature__flag_dot_feature__flag__pb2.GetFeatureFlagsResponse.SerializeToString,
            ),
            'UpdateFeatureFlag': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFeatureFlag,
                    request_deserializer=protos_dot_feature__flag_dot_feature__flag__pb2.UpdateFeatureFlagsRequest.FromString,
                    response_serializer=protos_dot_feature__flag_dot_feature__flag__pb2.UpdateFeatureFlagsResponse.SerializeToString,
            ),
            'DeleteFeatureFlag': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFeatureFlag,
                    request_deserializer=protos_dot_feature__flag_dot_feature__flag__pb2.DeleteFeatureFlagRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'rime.FeatureFlag', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FeatureFlag(object):
    """Service for managing feature flags.
    """

    @staticmethod
    def ListAllCustomerNames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.FeatureFlag/ListAllCustomerNames',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            protos_dot_feature__flag_dot_feature__flag__pb2.ListAllCustomerNamesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateFeatureFlag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.FeatureFlag/CreateFeatureFlag',
            protos_dot_feature__flag_dot_feature__flag__pb2.CreateFeatureFlagsRequest.SerializeToString,
            protos_dot_feature__flag_dot_feature__flag__pb2.CreateFeatureFlagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFeatureFlag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.FeatureFlag/GetFeatureFlag',
            protos_dot_feature__flag_dot_feature__flag__pb2.GetFeatureFlagsRequest.SerializeToString,
            protos_dot_feature__flag_dot_feature__flag__pb2.GetFeatureFlagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFeatureFlag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.FeatureFlag/UpdateFeatureFlag',
            protos_dot_feature__flag_dot_feature__flag__pb2.UpdateFeatureFlagsRequest.SerializeToString,
            protos_dot_feature__flag_dot_feature__flag__pb2.UpdateFeatureFlagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFeatureFlag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.FeatureFlag/DeleteFeatureFlag',
            protos_dot_feature__flag_dot_feature__flag__pb2.DeleteFeatureFlagRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
