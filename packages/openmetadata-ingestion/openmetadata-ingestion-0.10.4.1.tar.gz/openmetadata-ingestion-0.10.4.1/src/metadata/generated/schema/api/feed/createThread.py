# generated by datamodel-codegen:
#   filename:  schema/api/feed/createThread.json
#   timestamp: 2022-06-23T06:27:50+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Extra, Field

from ...type import basic


class CreateThreadRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    message: str = Field(..., description='Message')
    from_: str = Field(
        ...,
        alias='from',
        description='Name of the User (regular user or bot) posting the message',
    )
    addressedTo: Optional[basic.EntityLink] = Field(
        None,
        description='User or team this thread is addressed to in format <#E::{entities}::{entityName}::{field}::{fieldValue}.',
    )
    about: basic.EntityLink = Field(
        ...,
        description='Data asset about which this thread is created for with format <#E::{entities}::{entityType}::{field}::{fieldValue}',
    )
