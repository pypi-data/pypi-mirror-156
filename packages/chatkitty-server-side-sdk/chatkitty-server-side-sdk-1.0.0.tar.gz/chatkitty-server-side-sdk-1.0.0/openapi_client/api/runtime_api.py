"""
    ChatKitty Platform REST API

    Platform REST API OpenAPI specification (OAS).  See the Interactive Docs to try ChatKitty API methods without writing code,  and get the complete schema of resources exposed by the API.  # noqa: E501

    The version of the OpenAPI document: v1.15.10
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.api_client import ApiClient, Endpoint as _Endpoint
from openapi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from openapi_client.model.api_error import ApiError
from openapi_client.model.authentication_error import AuthenticationError
from openapi_client.model.chat_function_resource import ChatFunctionResource
from openapi_client.model.chat_runtime_dependency_properties import ChatRuntimeDependencyProperties
from openapi_client.model.chat_runtime_environment_variables_properties import ChatRuntimeEnvironmentVariablesProperties
from openapi_client.model.chat_runtime_resource import ChatRuntimeResource
from openapi_client.model.chat_runtime_script_properties import ChatRuntimeScriptProperties
from openapi_client.model.create_chat_function_resource import CreateChatFunctionResource
from openapi_client.model.paged_model_chat_function_resource import PagedModelChatFunctionResource


class RuntimeApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.create_nodejs_runtime_function_endpoint = _Endpoint(
            settings={
                'response_type': (ChatFunctionResource,),
                'auth': [
                    'application_authorization'
                ],
                'endpoint_path': '/v1/runtimes/nodejs/functions',
                'operation_id': 'create_nodejs_runtime_function',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'create_chat_function_resource',
                ],
                'required': [
                    'create_chat_function_resource',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'create_chat_function_resource':
                        (CreateChatFunctionResource,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'create_chat_function_resource': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/hal+json;charset=UTF-8'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.retrieve_nodejs_runtime_endpoint = _Endpoint(
            settings={
                'response_type': (ChatRuntimeResource,),
                'auth': [
                    'application_authorization'
                ],
                'endpoint_path': '/v1/runtimes/nodejs',
                'operation_id': 'retrieve_nodejs_runtime',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                },
                'attribute_map': {
                },
                'location_map': {
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/hal+json;charset=UTF-8'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.retrieve_nodejs_runtime_functions_endpoint = _Endpoint(
            settings={
                'response_type': (PagedModelChatFunctionResource,),
                'auth': [
                    'application_authorization'
                ],
                'endpoint_path': '/v1/runtimes/nodejs/functions',
                'operation_id': 'retrieve_nodejs_runtime_functions',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'page',
                    'size',
                    'sort',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'page',
                    'size',
                ]
            },
            root_map={
                'validations': {
                    ('page',): {

                        'inclusive_minimum': 0,
                    },
                    ('size',): {

                        'inclusive_minimum': 1,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'page':
                        (int,),
                    'size':
                        (int,),
                    'sort':
                        ([str],),
                },
                'attribute_map': {
                    'page': 'page',
                    'size': 'size',
                    'sort': 'sort',
                },
                'location_map': {
                    'page': 'query',
                    'size': 'query',
                    'sort': 'query',
                },
                'collection_format_map': {
                    'sort': 'multi',
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/hal+json;charset=UTF-8'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.update_nodejs_runtime_dependencies_endpoint = _Endpoint(
            settings={
                'response_type': (ChatRuntimeResource,),
                'auth': [
                    'application_authorization'
                ],
                'endpoint_path': '/v1/runtimes/nodejs/dependencies',
                'operation_id': 'update_nodejs_runtime_dependencies',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'chat_runtime_dependency_properties',
                ],
                'required': [
                    'chat_runtime_dependency_properties',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'chat_runtime_dependency_properties':
                        ([ChatRuntimeDependencyProperties],),
                },
                'attribute_map': {
                },
                'location_map': {
                    'chat_runtime_dependency_properties': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/hal+json;charset=UTF-8'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.update_nodejs_runtime_environment_variables_endpoint = _Endpoint(
            settings={
                'response_type': (ChatRuntimeResource,),
                'auth': [
                    'application_authorization'
                ],
                'endpoint_path': '/v1/runtimes/nodejs/environment-variables',
                'operation_id': 'update_nodejs_runtime_environment_variables',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'chat_runtime_environment_variables_properties',
                ],
                'required': [
                    'chat_runtime_environment_variables_properties',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'chat_runtime_environment_variables_properties':
                        (ChatRuntimeEnvironmentVariablesProperties,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'chat_runtime_environment_variables_properties': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/hal+json;charset=UTF-8'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.update_nodejs_runtime_initialization_script_endpoint = _Endpoint(
            settings={
                'response_type': (ChatRuntimeResource,),
                'auth': [
                    'application_authorization'
                ],
                'endpoint_path': '/v1/runtimes/nodejs/initialization-script',
                'operation_id': 'update_nodejs_runtime_initialization_script',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'chat_runtime_script_properties',
                ],
                'required': [
                    'chat_runtime_script_properties',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'chat_runtime_script_properties':
                        (ChatRuntimeScriptProperties,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'chat_runtime_script_properties': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/hal+json;charset=UTF-8'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def create_nodejs_runtime_function(
        self,
        create_chat_function_resource,
        **kwargs
    ):
        """Create a NodeJS chat runtime function  # noqa: E501

        Creates a NodeJS chat function for this runtime  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.create_nodejs_runtime_function(create_chat_function_resource, async_req=True)
        >>> result = thread.get()

        Args:
            create_chat_function_resource (CreateChatFunctionResource):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ChatFunctionResource
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['create_chat_function_resource'] = \
            create_chat_function_resource
        return self.create_nodejs_runtime_function_endpoint.call_with_http_info(**kwargs)

    def retrieve_nodejs_runtime(
        self,
        **kwargs
    ):
        """Retrieve NodeJS chat runtime  # noqa: E501

        Return this application's NodeJS chat runtime  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.retrieve_nodejs_runtime(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ChatRuntimeResource
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.retrieve_nodejs_runtime_endpoint.call_with_http_info(**kwargs)

    def retrieve_nodejs_runtime_functions(
        self,
        **kwargs
    ):
        """Retrieve NodeJS chat runtime functions  # noqa: E501

        Retrieve a page of functions for this application's NodeJS chat runtime  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.retrieve_nodejs_runtime_functions(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            page (int): Zero-based page index (0..N). [optional] if omitted the server will use the default value of 0
            size (int): The size of the page to be returned. [optional] if omitted the server will use the default value of 25
            sort ([str]): Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            PagedModelChatFunctionResource
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.retrieve_nodejs_runtime_functions_endpoint.call_with_http_info(**kwargs)

    def update_nodejs_runtime_dependencies(
        self,
        chat_runtime_dependency_properties,
        **kwargs
    ):
        """Update NodeJS chat runtime NPM dependencies  # noqa: E501

        Updates the NPM dependencies for this application's NodeJS chat runtime  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.update_nodejs_runtime_dependencies(chat_runtime_dependency_properties, async_req=True)
        >>> result = thread.get()

        Args:
            chat_runtime_dependency_properties ([ChatRuntimeDependencyProperties]):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ChatRuntimeResource
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['chat_runtime_dependency_properties'] = \
            chat_runtime_dependency_properties
        return self.update_nodejs_runtime_dependencies_endpoint.call_with_http_info(**kwargs)

    def update_nodejs_runtime_environment_variables(
        self,
        chat_runtime_environment_variables_properties,
        **kwargs
    ):
        """Update NodeJS chat runtime environment variables  # noqa: E501

        Updates the runtime environment variables of this application's NodeJS chat runtime  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.update_nodejs_runtime_environment_variables(chat_runtime_environment_variables_properties, async_req=True)
        >>> result = thread.get()

        Args:
            chat_runtime_environment_variables_properties (ChatRuntimeEnvironmentVariablesProperties):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ChatRuntimeResource
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['chat_runtime_environment_variables_properties'] = \
            chat_runtime_environment_variables_properties
        return self.update_nodejs_runtime_environment_variables_endpoint.call_with_http_info(**kwargs)

    def update_nodejs_runtime_initialization_script(
        self,
        chat_runtime_script_properties,
        **kwargs
    ):
        """Update NodeJS chat runtime initialization script  # noqa: E501

        Updates the initialization script for this application's NodeJS chat runtime  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.update_nodejs_runtime_initialization_script(chat_runtime_script_properties, async_req=True)
        >>> result = thread.get()

        Args:
            chat_runtime_script_properties (ChatRuntimeScriptProperties):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ChatRuntimeResource
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['chat_runtime_script_properties'] = \
            chat_runtime_script_properties
        return self.update_nodejs_runtime_initialization_script_endpoint.call_with_http_info(**kwargs)

