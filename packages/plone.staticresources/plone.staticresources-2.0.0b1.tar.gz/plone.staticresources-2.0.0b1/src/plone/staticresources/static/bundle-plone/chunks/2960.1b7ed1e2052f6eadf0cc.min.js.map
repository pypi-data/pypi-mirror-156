{"version":3,"file":"chunks/2960.1b7ed1e2052f6eadf0cc.min.js","mappings":"2IAiBA,MAAMA,EAAgB,GACtB,IAAIC,GAA+B,ECR5BC,eAAeC,GAAkB,YAAEC,EAAW,eAAEC,EAAiB,WACpE,MAAMC,QDSKJ,eAA6BK,GACxC,MAAMD,EAAYE,OAAOD,GAGzB,OAAIP,EAAcO,KAKbN,UACK,IAAyB,WAC/BA,GAA+B,SAG7BK,EAAUG,KAAK,IAAyBC,SAG9CV,EAAcO,IAAU,GAZbD,ECdaK,CAAcP,GAGtC,aAFsBE,EAAUM,IAAIP,MAKxC,IAAwBQ,EAAAA,EAUT,WAKX,MAAMC,EAAUC,OAAOC,KAAKR,QAAQS,QAAQC,GAAsC,IAA/BA,EAAGC,QAxB5B,wBAyB1B,IAAK,MAAMC,KAAeN,EAEtBX,EAAkB,CAAEC,YAAagB,IACjCC,QAAQC,MACJ,iEAAiEF,QAlB7C,aAAxBG,SAASC,YAAqD,gBAAxBD,SAASC,WAE/CC,WAAWZ,EAAI,GAEfU,SAASG,iBAAiB,mBAAoBb,GCFtD","sources":["webpack://plone.staticresources/./node_modules/@patternslib/patternslib/webpack/module_federation--dynamic-federation.js","webpack://plone.staticresources/./node_modules/@patternslib/patternslib/webpack/module_federation.js","webpack://plone.staticresources/./node_modules/@plone/mockup/src/index.js"],"sourcesContent":["// Author: Manfred Steyer <manfred.steyer@gmx.net>\n// Author: Johannes Raggam <thetetet@gmail.com>\n\n// From:\n//   https://github.com/manfredsteyer/plugin-demo.git\n//   https://github.com/thet/module-federation-minimaltest.git\n\n/**\n * Load remote module / bundle.\n *\n * Wrapper around webpack runtime API\n *\n * Usage: get_container(\"bundle-name-xyz\")\n *\n * @param {string} remote - the remote global name\n * @returns {Promise<object>} - Federated Module Container\n */\nconst container_map = {};\nlet is_default_scope_initialized = false;\n\nexport default async function get_container(remote) {\n    const container = window[remote];\n\n    // Do we still need to initialize the remote?\n    if (container_map[remote]) {\n        return container;\n    }\n\n    // Do we still need to initialize the shared scope?\n    if (!is_default_scope_initialized) {\n        await __webpack_init_sharing__(\"default\"); // eslint-disable-line no-undef\n        is_default_scope_initialized = true;\n    }\n\n    await container.init(__webpack_share_scopes__.default); // eslint-disable-line no-undef\n\n    // Remember that the container has been initialized.\n    container_map[remote] = true;\n    return container;\n}\n","/**\n * Initialize dynamic module federation.\n */\nimport get_container from \"./module_federation--dynamic-federation\";\n\n// Patternslib Module Federation bundle prefix.\n// This is used to filter for module federation enabled bundles.\n// NOTE: This is also defined in ``webpack.mf.js``.\nexport const MF_NAME_PREFIX = \"__patternslib_mf__\";\n\nexport async function initialize_remote({ remote_name, exposed_module = \"./main\" }) {\n    const container = await get_container(remote_name);\n    const factory = await container.get(exposed_module);\n    const module = factory();\n    return module;\n}\n\nfunction document_ready(fn) {\n    // see if DOM is already available\n    if (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n        // call on next available tick\n        setTimeout(fn, 1);\n    } else {\n        document.addEventListener(\"DOMContentLoaded\", fn);\n    }\n}\n\ndocument_ready(function () {\n    // Automatically initialize all Module Federation enabled Patternslib based\n    // bundles by filtering for the prefix ``__patternslib_mf__``.\n    // Do this on document ready, as this is the time where all MF bundles have\n    // been registered in the global namespace.\n    const bundles = Object.keys(window).filter((it) => it.indexOf(MF_NAME_PREFIX) === 0);\n    for (const bundle_name of bundles) {\n        // Now load + initialize each bundle.\n        initialize_remote({ remote_name: bundle_name });\n        console.debug(\n            `Patternslib Module Federation: Loaded and initialized bundle \"${bundle_name}\".`\n        );\n    }\n});\n","/**\n * Module Federation support for Mockup.\n *\n * In this module federation setup Mockup is the main host, which loads other\n * \"remote\" bundles.\n *\n * Those remotes need to be registered via the Patternslib's Webpack Module\n * Federation helper, just like Mockup itself (See Mockup's webpack.config.js).\n * Patternslib' Module Federation helper registers the bundle under a prefix\n * (``MF_NAME_PREFIX``) in the global namespace.\n *\n * Here, we filter for all the globally registered bundles with this prefix and\n * load them.\n *\n * Note: loading in this context only means that the module federation\n * functionality for each bundle is initialized.\n *\n */\nimport \"@patternslib/patternslib/webpack/module_federation\";\n\n// And now load this bundle's actual entry point.\nimport(\"./patterns\");\n"],"names":["container_map","is_default_scope_initialized","async","initialize_remote","remote_name","exposed_module","container","remote","window","init","default","get_container","get","fn","bundles","Object","keys","filter","it","indexOf","bundle_name","console","debug","document","readyState","setTimeout","addEventListener"],"sourceRoot":""}